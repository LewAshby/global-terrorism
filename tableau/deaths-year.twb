<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ft_attack+ (global_terrorism_dw)' inline='true' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0dw567m04ipt6i167msw31e9gc0i'>
            <connection class='mysql' dbname='global_terrorism_dw' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ft_attack].[id_attack_type]' />
              <expression op='[dt_attack_type].[sur_key_at]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[ft_attack].[id_weapon_type]' />
                <expression op='[dt_weapon_type].[sur_key_wt]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[ft_attack].[id_target_type]' />
                  <expression op='[dt_target_type].[sur_key_tt]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[ft_attack].[id_location]' />
                    <expression op='[dt_location].[sur_key_l]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ft_attack].[id_group_name]' />
                      <expression op='[dt_group_name].[sur_key_gn]' />
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[ft_attack].[id_amount_damage]' />
                        <expression op='[dt_damage_amount].[sur_key_da]' />
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[ft_attack].[id_date]' />
                          <expression op='[dt_date].[id]' />
                        </expression>
                      </clause>
                      <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='ft_attack' table='[ft_attack]' type='table' />
                      <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_date' table='[dt_date]' type='table' />
                    </relation>
                    <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_damage_amount' table='[dt_damage_amount]' type='table' />
                  </relation>
                  <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_group_name' table='[dt_group_name]' type='table' />
                </relation>
                <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_location' table='[dt_location]' type='table' />
              </relation>
              <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_target_type' table='[dt_target_type]' type='table' />
            </relation>
            <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_weapon_type' table='[dt_weapon_type]' type='table' />
          </relation>
          <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_attack_type' table='[dt_attack_type]' type='table' />
        </relation>
        <cols>
          <map key='[amount_range]' value='[dt_damage_amount].[amount_range]' />
          <map key='[attack_type]' value='[dt_attack_type].[attack_type]' />
          <map key='[city]' value='[dt_location].[city]' />
          <map key='[country]' value='[dt_location].[country]' />
          <map key='[date_string]' value='[dt_date].[date_string]' />
          <map key='[day_abbreviation]' value='[dt_date].[day_abbreviation]' />
          <map key='[day_in_month]' value='[dt_date].[day_in_month]' />
          <map key='[day_in_year]' value='[dt_date].[day_in_year]' />
          <map key='[day_name]' value='[dt_date].[day_name]' />
          <map key='[day_of_week]' value='[dt_date].[day_of_week]' />
          <map key='[end_date (dt_attack_type)]' value='[dt_attack_type].[end_date]' />
          <map key='[end_date (dt_damage_amount)]' value='[dt_damage_amount].[end_date]' />
          <map key='[end_date (dt_group_name)]' value='[dt_group_name].[end_date]' />
          <map key='[end_date (dt_location)]' value='[dt_location].[end_date]' />
          <map key='[end_date (dt_target_type)]' value='[dt_target_type].[end_date]' />
          <map key='[end_date (dt_weapon_type)]' value='[dt_weapon_type].[end_date]' />
          <map key='[end_date]' value='[dt_date].[end_date]' />
          <map key='[full_date]' value='[dt_date].[full_date]' />
          <map key='[group_name]' value='[dt_group_name].[group_name]' />
          <map key='[id]' value='[dt_date].[id]' />
          <map key='[id_amount_damage]' value='[ft_attack].[id_amount_damage]' />
          <map key='[id_at]' value='[dt_attack_type].[id_at]' />
          <map key='[id_attack_type]' value='[ft_attack].[id_attack_type]' />
          <map key='[id_city]' value='[dt_location].[id_city]' />
          <map key='[id_country]' value='[dt_location].[id_country]' />
          <map key='[id_da]' value='[dt_damage_amount].[id_da]' />
          <map key='[id_date]' value='[ft_attack].[id_date]' />
          <map key='[id_fact]' value='[ft_attack].[id_fact]' />
          <map key='[id_gn]' value='[dt_group_name].[id_gn]' />
          <map key='[id_group_name]' value='[ft_attack].[id_group_name]' />
          <map key='[id_location]' value='[ft_attack].[id_location]' />
          <map key='[id_prov_state]' value='[dt_location].[id_prov_state]' />
          <map key='[id_region]' value='[dt_location].[id_region]' />
          <map key='[id_target_type]' value='[ft_attack].[id_target_type]' />
          <map key='[id_tt]' value='[dt_target_type].[id_tt]' />
          <map key='[id_weapon_type]' value='[ft_attack].[id_weapon_type]' />
          <map key='[id_wt]' value='[dt_weapon_type].[id_wt]' />
          <map key='[is_weekend]' value='[dt_date].[is_weekend]' />
          <map key='[last_update]' value='[dt_attack_type].[last_update]' />
          <map key='[latitude]' value='[dt_location].[latitude]' />
          <map key='[location]' value='[dt_location].[location]' />
          <map key='[longitude]' value='[dt_location].[longitude]' />
          <map key='[month]' value='[dt_date].[month]' />
          <map key='[month_abbreviation]' value='[dt_date].[month_abbreviation]' />
          <map key='[month_name]' value='[dt_date].[month_name]' />
          <map key='[n_deaths]' value='[ft_attack].[n_deaths]' />
          <map key='[n_injured]' value='[ft_attack].[n_injured]' />
          <map key='[n_perpetrators]' value='[ft_attack].[n_perpetrators]' />
          <map key='[n_perpetrators_custody]' value='[ft_attack].[n_perpetrators_custody]' />
          <map key='[n_perpetrators_death]' value='[ft_attack].[n_perpetrators_death]' />
          <map key='[n_success]' value='[ft_attack].[n_success]' />
          <map key='[prov_state]' value='[dt_location].[prov_state]' />
          <map key='[quarter_name]' value='[dt_date].[quarter_name]' />
          <map key='[quarter_number]' value='[dt_date].[quarter_number]' />
          <map key='[region]' value='[dt_location].[region]' />
          <map key='[start_date (dt_attack_type)]' value='[dt_attack_type].[start_date]' />
          <map key='[start_date (dt_damage_amount)]' value='[dt_damage_amount].[start_date]' />
          <map key='[start_date (dt_group_name)]' value='[dt_group_name].[start_date]' />
          <map key='[start_date (dt_location)]' value='[dt_location].[start_date]' />
          <map key='[start_date (dt_target_type)]' value='[dt_target_type].[start_date]' />
          <map key='[start_date (dt_weapon_type)]' value='[dt_weapon_type].[start_date]' />
          <map key='[start_date]' value='[dt_date].[start_date]' />
          <map key='[sur_key_at]' value='[dt_attack_type].[sur_key_at]' />
          <map key='[sur_key_da]' value='[dt_damage_amount].[sur_key_da]' />
          <map key='[sur_key_gn]' value='[dt_group_name].[sur_key_gn]' />
          <map key='[sur_key_l]' value='[dt_location].[sur_key_l]' />
          <map key='[sur_key_tt]' value='[dt_target_type].[sur_key_tt]' />
          <map key='[sur_key_wt]' value='[dt_weapon_type].[sur_key_wt]' />
          <map key='[target_subtype]' value='[dt_target_type].[target_subtype]' />
          <map key='[target_type]' value='[dt_target_type].[target_type]' />
          <map key='[version (dt_attack_type)]' value='[dt_attack_type].[version]' />
          <map key='[version (dt_damage_amount)]' value='[dt_damage_amount].[version]' />
          <map key='[version (dt_group_name)]' value='[dt_group_name].[version]' />
          <map key='[version (dt_location)]' value='[dt_location].[version]' />
          <map key='[version (dt_target_type)]' value='[dt_target_type].[version]' />
          <map key='[version (dt_weapon_type)]' value='[dt_weapon_type].[version]' />
          <map key='[version]' value='[dt_date].[version]' />
          <map key='[weapon_subtype]' value='[dt_weapon_type].[weapon_subtype]' />
          <map key='[weapon_type]' value='[dt_weapon_type].[weapon_type]' />
          <map key='[week_in_month]' value='[dt_date].[week_in_month]' />
          <map key='[week_in_year]' value='[dt_date].[week_in_year]' />
          <map key='[year]' value='[dt_date].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id_fact</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_fact]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_fact</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_date</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_date]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_weapon_type</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_weapon_type]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_weapon_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_location</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_location]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_group_name</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_group_name]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_group_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_target_type</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_target_type]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_target_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_attack_type</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_attack_type]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_attack_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_amount_damage</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_amount_damage]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_amount_damage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_deaths]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_perpetrators</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_perpetrators]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_perpetrators</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_perpetrators_death</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_perpetrators_death]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_perpetrators_death</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_perpetrators_custody</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_perpetrators_custody]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_perpetrators_custody</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_injured</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_injured]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_injured</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_success</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_success]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_success</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[full_date]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>full_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_string</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_string]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>date_string</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_week</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_of_week]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_of_week</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_in_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_in_month]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_in_month</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_in_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_in_year]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_in_year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_name]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_abbreviation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_abbreviation]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_abbreviation</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_in_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[week_in_month]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>week_in_month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_in_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[week_in_year]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>week_in_year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_abbreviation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_abbreviation]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>month_abbreviation</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter_number</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter_number]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>quarter_number</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[quarter_name]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>quarter_name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>33</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>34</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_da</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_da]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>sur_key_da</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_da</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_da]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>id_da</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amount_range</remote-name>
            <remote-type>130</remote-type>
            <local-name>[amount_range]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>amount_range</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_damage_amount)]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>40</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_damage_amount)]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>41</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_damage_amount)]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_gn</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_gn]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>sur_key_gn</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_gn</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_gn]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>id_gn</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_group_name)]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>47</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_group_name)]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>48</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_group_name)]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_l</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_l]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>sur_key_l</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_region</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_region]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_region</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_country</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_country]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_country</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_prov_state</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_prov_state]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_prov_state</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prov_state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[prov_state]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>prov_state</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_city</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_city]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_city</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4194303</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_location)]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>63</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_location)]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>64</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_location)]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_tt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_tt]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>sur_key_tt</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_tt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_tt]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>id_tt</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[target_type]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>target_type</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_subtype</remote-name>
            <remote-type>130</remote-type>
            <local-name>[target_subtype]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>target_subtype</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_target_type)]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>71</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_target_type)]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>72</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_target_type)]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_wt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_wt]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>sur_key_wt</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_wt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_wt]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>id_wt</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weapon_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weapon_type]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>weapon_type</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weapon_subtype</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weapon_subtype]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>weapon_subtype</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_weapon_type)]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>79</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_weapon_type)]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>80</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_weapon_type)]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_at</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_at]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>sur_key_at</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_at</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_at]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>id_at</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attack_type]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>attack_type</remote-alias>
            <ordinal>85</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>86</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_attack_type)]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>87</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_attack_type)]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>88</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_attack_type)]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>89</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Amount Range' datatype='string' name='[amount_range]' role='dimension' type='nominal' />
      <column caption='Attack Type' datatype='string' name='[attack_type]' role='dimension' type='nominal' />
      <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
          <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
          <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
          <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
        </semantic-values>
      </column>
      <column caption='Date String' datatype='string' name='[date_string]' role='dimension' type='nominal' />
      <column caption='Day Abbreviation' datatype='string' name='[day_abbreviation]' role='dimension' type='nominal' />
      <column caption='Day In Month' datatype='integer' name='[day_in_month]' role='dimension' type='quantitative' />
      <column caption='Day In Year' datatype='integer' name='[day_in_year]' role='dimension' type='quantitative' />
      <column caption='Day Name' datatype='string' name='[day_name]' role='dimension' type='nominal' />
      <column caption='Day Of Week' datatype='integer' name='[day_of_week]' role='dimension' type='quantitative' />
      <column caption='End Date (Dt Damage Amount)' datatype='date' name='[end_date (dt_damage_amount)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Group Name)' datatype='date' name='[end_date (dt_group_name)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Location)' datatype='date' name='[end_date (dt_location)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Target Type)' datatype='date' name='[end_date (dt_target_type)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Weapon Type)' datatype='date' name='[end_date (dt_weapon_type)]' role='dimension' type='ordinal' />
      <column caption='End Date' datatype='date' name='[end_date]' role='dimension' type='ordinal' />
      <column caption='Full Date' datatype='date' name='[full_date]' role='dimension' type='ordinal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Amount Damage' datatype='integer' name='[id_amount_damage]' role='dimension' type='ordinal' />
      <column caption='Id At' datatype='integer' name='[id_at]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Attack Type' datatype='integer' name='[id_attack_type]' role='dimension' type='ordinal' />
      <column caption='Id City' datatype='integer' name='[id_city]' role='dimension' type='ordinal' />
      <column caption='Id Country' datatype='integer' name='[id_country]' role='dimension' type='ordinal' />
      <column caption='Id Da' datatype='integer' name='[id_da]' role='dimension' type='ordinal' />
      <column caption='Id Date' datatype='integer' name='[id_date]' role='dimension' type='ordinal' />
      <column caption='Id Fact' datatype='integer' name='[id_fact]' role='dimension' type='ordinal' />
      <column caption='Id Gn' datatype='integer' name='[id_gn]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Group Name' datatype='integer' name='[id_group_name]' role='dimension' type='ordinal' />
      <column caption='Id Location' datatype='integer' name='[id_location]' role='dimension' type='ordinal' />
      <column caption='Id Prov State' datatype='integer' name='[id_prov_state]' role='dimension' type='ordinal' />
      <column caption='Id Region' datatype='integer' name='[id_region]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Target Type' datatype='integer' name='[id_target_type]' role='dimension' type='ordinal' />
      <column caption='Id Tt' datatype='integer' name='[id_tt]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Weapon Type' datatype='integer' name='[id_weapon_type]' role='dimension' type='ordinal' />
      <column caption='Id Wt' datatype='integer' name='[id_wt]' role='dimension' type='ordinal' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='date' name='[last_update]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Month Abbreviation' datatype='string' name='[month_abbreviation]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
      <column caption='Injured' datatype='integer' name='[n_injured]' role='measure' type='quantitative' />
      <column caption='N Perpetrators' datatype='integer' name='[n_perpetrators]' role='measure' type='quantitative' />
      <column caption='N Perpetrators Custody' datatype='integer' name='[n_perpetrators_custody]' role='measure' type='quantitative' />
      <column caption='N Perpetrators Death' datatype='integer' name='[n_perpetrators_death]' role='measure' type='quantitative' />
      <column caption='Successful attacks' datatype='integer' name='[n_success]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Prov State' datatype='string' name='[prov_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Quarter Name' datatype='string' name='[quarter_name]' role='dimension' type='nominal' />
      <column caption='Quarter Number' datatype='integer' name='[quarter_number]' role='dimension' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Start Date (Dt Damage Amount)' datatype='date' name='[start_date (dt_damage_amount)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Group Name)' datatype='date' name='[start_date (dt_group_name)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Location)' datatype='date' name='[start_date (dt_location)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Target Type)' datatype='date' name='[start_date (dt_target_type)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Weapon Type)' datatype='date' name='[start_date (dt_weapon_type)]' role='dimension' type='ordinal' />
      <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key At' datatype='integer' name='[sur_key_at]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key Da' datatype='integer' name='[sur_key_da]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key Gn' datatype='integer' name='[sur_key_gn]' role='dimension' type='ordinal' />
      <column caption='Sur Key L' datatype='integer' name='[sur_key_l]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Sur Key Tt' datatype='integer' name='[sur_key_tt]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key Wt' datatype='integer' name='[sur_key_wt]' role='dimension' type='ordinal' />
      <column caption='Target Subtype' datatype='string' name='[target_subtype]' role='dimension' type='nominal' />
      <column caption='Target Type' datatype='string' name='[target_type]' role='dimension' type='nominal' />
      <column caption='Version (Dt Damage Amount)' datatype='integer' name='[version (dt_damage_amount)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Group Name)' datatype='integer' name='[version (dt_group_name)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Location)' datatype='integer' name='[version (dt_location)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Target Type)' datatype='integer' name='[version (dt_target_type)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Weapon Type)' datatype='integer' name='[version (dt_weapon_type)]' role='measure' type='quantitative' />
      <column caption='Version' datatype='integer' name='[version]' role='measure' type='quantitative' />
      <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
      <column caption='Weapon Type' datatype='string' name='[weapon_type]' role='dimension' type='nominal' />
      <column caption='Week In Month' datatype='integer' name='[week_in_month]' role='dimension' type='quantitative' />
      <column caption='Week In Year' datatype='integer' name='[week_in_year]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
      <column-instance column='[weapon_type]' derivation='None' name='[none:weapon_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Weapon Subtype,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:weapon_subtype:nk]' />
          <groupfilter function='level-members' level='[none:year:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Weapon Subtype,Weapon Type)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:weapon_subtype:nk]' />
          <groupfilter function='level-members' level='[none:weapon_type:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Date hierarchy'>
          <field>[year]</field>
          <field>[quarter_number]</field>
          <field>[quarter_name]</field>
          <field>[month]</field>
          <field>[week_in_month]</field>
          <field>[day_in_month]</field>
          <field>[day_name]</field>
          <field>[month_name]</field>
        </drill-path>
        <drill-path name='Location hierarchy'>
          <field>[region]</field>
          <field>[country]</field>
          <field>[prov_state]</field>
          <field>[city]</field>
        </drill-path>
        <drill-path name='Target hierarchy'>
          <field>[target_type]</field>
          <field>[target_subtype]</field>
        </drill-path>
        <drill-path name='Weapon hierarchy'>
          <field>[weapon_type]</field>
          <field>[weapon_subtype]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.590659' measure-ordering='alphabetic' measure-percentage='0.409341' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:weapon_subtype:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hands, Feet, Fists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Unknown Weapon Type&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arson/Fire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rifle/Shotgun (non-automatic)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Explosive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suicide (carried bodily by human being)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Molotov Cocktail/Petrol Bomb&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knife or Other Sharp Object&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vehicle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gasoline or Alcohol&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Time Fuse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Projectile (rockets, mortars, RPGs, etc.)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Automatic or Semi-Automatic Rifle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rope or Other Strangling Device&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poisoning&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Unknown Explosive Type&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other Explosive Type&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other Gun Type&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pressure Trigger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Remote Trigger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Landmine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Handgun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unknown Gun Type&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blunt Object&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sticky Bomb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pipe Bomb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Letter Bomb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dynamite/TNT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suffocation&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='country-deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Attack Type' datatype='string' name='[attack_type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[attack_type]' derivation='None' name='[none:attack_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[prov_state]' derivation='None' name='[none:prov_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='None' caption='Prov State' datatype='string' name='[prov_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]'>
            <groupfilter function='level-members' level='[none:attack_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2001' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]</column>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]</column>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='18409021.673297212' min='-15015123.981687976' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='14922434.142487925' min='-14847228.580390934' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:prov_state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:prov_state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:prov_state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F9AD7A75-7559-4F2C-A796-EC36FAF7705C}' />
    </worksheet>
    <worksheet name='country-weapon type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weapons used by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]'>
            <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Automatic or Semi-Automatic Rifle&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2001' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</column>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='22147674.207989983' min='-16095223.24970118' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='12341205.310825288' min='-6900505.1483914237' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{43F6FB4C-D7E0-4B93-8C28-C252A58D20E7}' />
    </worksheet>
    <worksheet name='deaths-country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths for countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='17620530.963873368' min='-15309527.904231487' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='12074692.818491433' min='-7185779.3893388025' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6F46F2AF-1D9C-4A42-B0DD-398C8A70BC58}' />
    </worksheet>
    <worksheet name='deaths-weapon'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths for type of weapon</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
            <column-instance column='[weapon_type]' derivation='None' name='[none:weapon_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
            <column caption='Weapon Type' datatype='string' name='[weapon_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:weapon_subtype:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Unknown Explosive Type&quot;' />
                <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Unknown Gun Type&quot;' />
                <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Unknown Weapon Type&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</cols>
      </table>
      <simple-id uuid='{F95BA37C-79D0-477E-A798-15B24579548A}' />
    </worksheet>
    <worksheet name='deaths-weapon-history'>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Exclusions (Weapon Subtype,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:weapon_subtype:nk]' />
                <groupfilter function='level-members' level='[none:year:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Unknown Gun Type&quot;' />
                <groupfilter function='member' level='[none:year:qk]' member='2014' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:weapon_subtype:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Unknown Explosive Type&quot;' />
                <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Unknown Gun Type&quot;' />
                <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Unknown Weapon Type&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Exclusions (Weapon Subtype,Year)]</column>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{002F23DA-E233-4CBB-85AC-B7ABE9D6AA03}' />
    </worksheet>
    <worksheet name='deaths-year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column caption='Injured' datatype='integer' name='[n_injured]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_injured]' derivation='Sum' name='[sum:n_injured:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' scope='rows' value='Deaths' />
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_injured:qk]' scope='rows' value='Injured' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_injured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk] + [federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_injured:qk])</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{C63E48AE-64E3-4B9E-919E-34657EA50448}' />
    </worksheet>
    <worksheet name='perpetrators-analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Perpetrators</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='N Perpetrators' datatype='integer' name='[n_perpetrators]' role='measure' type='quantitative' />
            <column caption='N Perpetrators Custody' datatype='integer' name='[n_perpetrators_custody]' role='measure' type='quantitative' />
            <column caption='N Perpetrators Death' datatype='integer' name='[n_perpetrators_death]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_perpetrators]' derivation='Sum' name='[sum:n_perpetrators:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_perpetrators_custody]' derivation='Sum' name='[sum:n_perpetrators_custody:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_perpetrators_death]' derivation='Sum' name='[sum:n_perpetrators_death:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators:qk]' scope='rows' value='Perpetrators' />
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_custody:qk]' scope='rows' value='Perpetrators in custody' />
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_death:qk]' scope='rows' value='Perpetrators Deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_custody:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators:qk] + ([federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_custody:qk] + [federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_death:qk]))</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{CCAC23D0-B572-4CF6-BD99-A082974B5ECA}' />
    </worksheet>
    <worksheet name='targets-country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Targets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[target_type]' derivation='None' name='[none:target_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Target Type' datatype='string' name='[target_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]'>
            <groupfilter function='member' level='[none:target_type:nk]' member='&quot;Government (Diplomatic)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='17679341.565181043' min='-18291122.965052903' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='13761431.415902074' min='-7277344.5900026029' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7CF3849F-AB2D-4846-9749-27C7B41ABE68}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='death history attack type'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
      </datasources>
      <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
        <column caption='Attack Type' datatype='string' name='[attack_type]' role='dimension' type='nominal' />
        <column-instance column='[attack_type]' derivation='None' name='[none:attack_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82300' x='800' y='1000'>
              <zone h='98000' id='1' name='country-deaths' w='82300' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='161' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16100' x='83100' y='1000'>
              <zone h='33250' id='6' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' w='16100' x='83100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4000' id='7' mode='slider' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' show-title='false' type='filter' values='cascading' w='16600' x='65700' y='80750' />
        <zone h='2750' id='8' name='country-deaths' pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' w='15500' x='83600' y='38625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='25' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='33250' id='6' mode='checkdropdown' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' w='16100' x='83100' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4000' id='7' mode='slider' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' show-title='false' type='filter' values='cascading' w='16600' x='65700' y='80750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='1' is-fixed='true' name='country-deaths' w='82300' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='8' name='country-deaths' pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' w='15500' x='83600' y='38625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{13A3EB13-2F80-437A-907D-0849B1E70985}' />
    </dashboard>
    <dashboard name='death history sheet year and country'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='42750' id='1' name='deaths-country' w='97800' x='1800' y='11250' />
        <zone h='7500' id='6' name='deaths-country' pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' show-title='false' type='color' w='97700' x='1800' y='55250' />
        <zone h='36250' id='7' name='deaths-year' w='98700' x='1100' y='63250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='42750' id='1' is-fixed='true' name='deaths-country' w='97800' x='1800' y='11250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7500' id='6' name='deaths-country' pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' show-title='false' type='color' w='97700' x='1800' y='55250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36250' id='7' is-fixed='true' name='deaths-year' w='98700' x='1100' y='63250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D55EEB7B-47CB-4EDB-B37E-0020A1A9C99B}' />
    </dashboard>
    <dashboard name='story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global terrorism history analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='17' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='16' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='18' type='title' w='98426' x='787' y='830' />
            <zone h='6535' id='19' paired-zone-id='20' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='87448' id='20' paired-zone-id='19' removable='false' type='flipboard' w='98426' x='787' y='11722'>
              <flipboard active-id='8' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='deaths-year' id='1' />
                  <story-point captured-sheet='deaths-country' id='2' />
                  <story-point captured-sheet='country-deaths' id='3'>
                    <capturedDeltas>
                      <worksheet name='country-deaths'>
                        <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]'>
                          <groupfilter function='member' level='[none:attack_type:nk]' member='&quot;Facility/Infrastructure Attack&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]'>
                          <groupfilter function='member' level='[none:year:ok]' member='2011' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='18498032.669055771' min='-17265557.012695961' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='20274794.849160492' min='-15358903.528932128' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='targets-country' id='6'>
                    <capturedDeltas>
                      <worksheet name='targets-country'>
                        <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]'>
                          <groupfilter function='member' level='[none:target_type:nk]' member='&quot;Government (General)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='deaths-weapon' id='4' />
                  <story-point captured-sheet='deaths-weapon-history' id='5'>
                    <capturedDeltas>
                      <worksheet name='deaths-weapon-history'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</field>
                                  <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</field>
                                  <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Projectile (rockets, mortars, RPGs, etc.)&quot;</value>
                                <value>2015</value>
                                <value>4060</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='country-weapon type' id='7'>
                    <capturedDeltas>
                      <worksheet name='country-weapon type'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='19746742.350003' min='-23766163.058631849' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='23388696.315066218' min='-19966172.720267784' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='perpetrators-analysis' id='8' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='20' forceUpdate='true' h='13589' hidden='true' id='21' story-point-id='7' type='text' w='16142' x='83169' y='34440'>
          <formatted-text>
            <run fontsize='12'>Semi-Automatic Weapons</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{44EB2660-DA91-4D60-9396-C47DED8F06D5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='deaths-year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EDE87896-C779-4066-84AC-395F162B6748}' />
    </window>
    <window class='worksheet' name='deaths-country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:group_name:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9EF9313E-7AEA-4693-99B2-1E0FFD1BA897}' />
    </window>
    <window class='worksheet' name='country-deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' />
            <card mode='slider' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:region:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3D01D8EA-3DA6-4B38-AE3B-5008BFEE110C}' />
    </window>
    <window class='worksheet' name='deaths-weapon'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_gn:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D3C9430-CE20-45EE-B04F-CB518BCB14B0}' />
    </window>
    <window class='worksheet' name='deaths-weapon-history'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_gn:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{471D2636-9CAF-4E74-9C3B-A5598900EF26}' />
    </window>
    <window class='worksheet' name='country-weapon type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_fact:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_weapon_type:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_wt:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8B8D949F-C59B-47BB-BC7E-BC5628018B1D}' />
    </window>
    <window class='worksheet' name='targets-country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{52326D0C-A221-4D22-AC5F-77A42C6FA0A9}' />
    </window>
    <window class='worksheet' name='perpetrators-analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{71508E83-616C-4DC7-9236-F1BD5E2BF219}' />
    </window>
    <window class='dashboard' name='death history attack type'>
      <viewpoints>
        <viewpoint name='country-deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A55BE912-5DF7-4716-8291-6709EF7E457E}' />
    </window>
    <window class='dashboard' name='death history sheet year and country'>
      <viewpoints>
        <viewpoint name='deaths-country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='deaths-year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F7D22BD3-B4E7-42E7-90D4-BD52FD4A3A26}' />
    </window>
    <window class='dashboard' maximized='true' name='story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{333BC734-8EDF-450F-A460-F86604BDC401}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='country-deaths' width='192'>
      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
      MKn0NCFJEplsdlvH7R8bBwimP4opl6qq1ugghTyHOrPEtQidifrOxRFFoS+dxF3NI5tF+tNJ
      rsmgaxEORzV838FPRblchKFMCsfzmDJdBs98lXiT5GNbAXYRjuMExRrN8GDiHouXP0fxPHTf
      JxZanRYUidlzL/HG/mGuTs+iqSqnxmrbd0zT0LUItuPw3aEu9ID1qLNYKHH5yy85c/Zskyu2
      FoIGWrFYUF6ZSqXITU8Sj2/M5PR9n5V8geO9tYow2/NQQtQSH3B9D8t1mYllGX/91IZJx7YC
      7CJ+86tf0dPXyyuvvLpuhTdNk8rNK5w7dgCOHWB6Jccnn1/hyI37pHxI+nC0t5vBjiyDHetX
      1n1dHU2vma9W0adu8+PrVzhy6BDx/kH2je7f8wRaMwiKBNQc6mq1imWapK0qxDcuhsqVK8zl
      8kj4uD5YDf6/BBQtm8K+IxzaN9r0HAJtBdhFfPd73wsGXjfCtm1mlpYZS8VYLVcoVQ2+97Wz
      fB6PszI5i2Wa9G4wcWYzHOzrwbQdRrt9ol6VqcsX+f3t24zsGyXd2UksFmsZHpIodikUCti2
      XQvp5lc4lNn8/u4sLFN2XMaGBolHNQqVKl9Oz9GbStCXTlGwbAZOvkr/yL4t76GtALuIjSgP
      UHP4Sr7M/aUVJM/jUF8XsiRx6sxJ7NeO818//JRjHZmmn90K0dDUm950kpRloM3coTJxjaIv
      4Q+OMnby5WBXEEmrp71LKIoSTGoRky8L+RyStvl9KBIMqBBRZPB9MvEYL48Oc2t2Hj9fpJTp
      5vjp7ZmAbQXYIyxOP2BMl6kYBscH+4LX5/JFlspV3njlGNkm/JdHhR6JoK9RCxJrZYJmbo4b
      762idnRx8ORLe0qriEaj2KUSd//wOzKpBMd6OoDNyxk7kklIJYM+TSKKdLC/ly+n50gc6N3s
      43VoJ8L2CNnePpRkuk74Pd9nvlDipX1DDHZkNy3sfhJEVZUDqos2c49iobAr13gUZLp7KL3/
      CaWfvcO7/98vsF0X03ZYKpaaHt+bTq5rWiygKCqp1Pba00BbAfYMyWSS4a++zXQoM1q1bOL6
      06M2JNTa8Om9xuDwECPHj3PE9TlWqPDpxcu89+5HTPyXn/Hh+xfXHS9JEgv5IuYa2S6MkWyK
      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
    </thumbnail>
    <thumbnail height='192' name='country-weapon type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WY8kWZYe9tnu5ruHx5r7UlWZlbVXd/X0dLOnewbNEYkZSZgZChKgB0oP
      hJ4F6FWA/oEexTcBhAgQBIfiiCBActDTw+m9q3q6qyqruyqzcqnMjMiMxXd3M3db9eDx3bhu
      Ye7hERmRGYt/QCAzwt3NzM3Oufcs3zlH6XQ6sWEYOAoMBgMMBgMoigIAyGazUFUVAMTfDoIo
      itDr9aBpGizLgqZp4rU4jtHtdhHH8ch54jhGHMdQFAWKosC2bcRxjHHf3XVdBEFw4Gt82VBV
      FVEUwTRNWJb1Uq/FcRzoug7TNF/qdaRBNwzjSG5QEAQIggCqqsIwDARBAMuyEMexeDCE53kA
      MPI3CisAhGEoFIfHVlUVcRxjMBigXC6L43qeJ4RcFn4AI3/3fR+TvrtpmvA8D/1+H2EYHu7N
      OWJomoZisYgoisTvLwtxHCMIAmQymZd6HeOgH8VBuUJHUQTLsqDrOnRdh6IoCIJgRNCjKILj
      OLsEsdfrwTAM8d5mswlN06DrOrLZLCzLwmAwQBzHaLVaiKIItm1DURSYpokwDIUA8NyKokBV
      VQwGA2iahkwmM/Y78Die5504BeDupiiKuAcvC4qiIJvNvtRrmIRDV4AoitBqtcQDoJkCDM0K
      13WRy+WgadqIIvi+D9u2dy5M1+E4DoDhDmEYBvr9PqIoQjabRTabhaZpYjX3PA+DwQDZbFYc
      J45jhGEo3gfs7B6ZTGYqM4y7h2EYiOMYqqoKBQvDUOxexwk0PfP5/LFYdZ/H3D1qHLoCKIoi
      hCsIAti2Dc/zoKoqXNeFoihwHAeqqkLTNGiaJoQ7CAJ4nodMJgPDMOA4jhBs2QSiclmWBUVR
      oOu6OIds0/O1kS+8vRtFUbTng1EUBYVCQSgggF3XYZomut3uYdy6Q4Pv++K7HWfhOw5Q937L
      /kAH07Is5HI5uK4LAMI2J2j6ABgxcxzHge/7UFVVCB/fL/8rgyt8EAQjDjAwFFLP8+C6Ljqd
      DjzPG/Evpvk+lmVBVdUR4edrpmmiWCzueu1lI4oi+L7/si/j2ONIfABgZ+Wh8DCiIgvnYDAQ
      75X/zgiGrusolUpQFAX9fh+u60LTNOHsDgYDYU7x80EQoNPpCMHlzkLQ+c3n84f2XXVdh2EY
      4vscF4RhuC9lP2uI4/jwd4AkKJzyw6Dpo2kaBoMB+v2+eD/Nlk6nA2AoXJqmiW3dMAyoqgrf
      9xFFEfr9/q4VPwgC+L6PbrebGso8ivDmUYWSD4psNivMTfn+zDBEFEX48Fe/OrodQIaqqigW
      i0IJNE0T9j0A4dBGUQTDMKAoilj5iXw+Lz4LjMb3aQJN+6CTfsFhgCHV47ILBEGAfD6PIAhm
      u0AKFEXB5w8fHo0CJJNQBHeDZrMpojOlUkmEKZMXKINCy2Pn83n0+33xvlwuJ1Z+TdN2RWd0
      XUcQBCPO82GCvg99jJcJ+j1BEKTe2xmAZqsFJwoOVwH6/T583xdCWCgURMJKjkrk83mEYfhc
      gkiBI0zTFM50HMcjrwE7foWqqkcqEPvZiY4CcsZ7MBgcyW73PDguu9H9B/cxd/nS4SqA53kj
      UZtGoyHMEzkmbRjGgWxm+hJ8qPKKL+cU6GckcdQxcTkk+7LAe3FcqQfHQfj7/T4+ffgA5Vev
      H64CMHNK0CFVFAWdTgeFQmFPIYyiSESA5L85jiN8CO4s3W53JCxqmqaI7oRhKMKpSWVjQuso
      8LLCocz6clHI5XLHUgFeNjzPw3/82U+Qv3wJpm0frgLI228SURTBdd2J4UcS2YIgQKlUEsrS
      7/eFbU3zgplY+VwU9CAI0G63AQwdbCqQ53nI5XIiEZfcmQ4DSZPvRSGTySAMQxEqPg4Z4OMI
      wzCgDDxouoY4ig4vDBrHMVzX3WX/koNDG50coSSoIDJvh2Augf9XFEXsBjwft34qEbCT9W02
      m2JnYh6ACtTr9Q7NZmeY9mVs8wx3FotFVCqVl84APa54+OQJWohh5XJY/93nh6sAaaQxmQzV
      brcFn8d13ZEtGxiu9P1+H5lMRqykXK2pAL7vj0R/qASkX9CEAoarorxzkD3KXAJ3jMMmjL0M
      08M0zV308xlG4XkePn14H/OvXsfAcbFg2YenAGnhP5oYQRAIoY3jWGR1e70eFEVBt9vdZc4Q
      URSh2WwKX4LbvK7rUFUVtm2jWq2KFS+Z/k9TSl3XUalUhBnE3eQwQHPrRbMwufOcNObqi0S3
      18PA3DaTHQfffP9rh6cAzOYmbXLWAgA7MXwmi4IgEMxRmfPPh8jdQ15R5YKaNDtXdsJJrJPB
      rHK73cZgMBAZ48PizdDsetGhUM/zUCgUZqbPBPT7fajbwRUjilCtVg9PAZIJFwpvkk/P90RR
      NPL3MAyFoPu+LwRIVVXkcjnxYJOCvxenn2Q81gIAEA5xFEXiPIe5asvnelGgIs8UIB1btS38
      l7ufwyowCKMcLhcon8+jWCyOFJ7wR+bjA0hdHUlu4+tJvg6LXSzLEmZVEASiKCYNg8EApmnu
      ojAnuUP8cV1XcIwOijiORW4imYw7SnAXlXlVM+wgCEKEcYxBb7vGRFXQ6XYPlwxnmiYMw0Au
      lxMUYcMwUCgURLhRLkuUBVPeEVjeKENVVeTzedi2LagOdJLlncSyLJimKfwNRnnknzTQQe50
      Ouh0Ogc2YRRFQblcRj6ff2HOKBNw/A4nuZb5qLC8tIS35hZw+z/9NQaOg1x1DvcePzpcBVAU
      BcVicVeheq/XGwk3JsOcaUgTQEZv+KB5rGQyjEU2PA6PJf9fNn+SIN36IGDIV1VVURNx1Iqg
      aZrIr0z6XscV3LnIYTqq63/z1i288/otdDa2AACPBy6Ufr8fH9RuHEd6S0IOXTJ6Q56+/GWT
      Rez5fF6s5snztlotERliBpirfrPZnCgIyXOmKSR3KNu29x3WjOMY7XZb+EE0rY4Ktm0jk8mg
      1WohDEMUCoUTkQX2fV9ECC3LQhiGomTVNM2py1b3g36/j9/evYuvnj1FfWvr4ApAM4V1uNO8
      PwiCkWgPqQxpAk6YpolCobDLhyCjlCgWi+Khs1Y3WS9ABYnjWCgi6RLjkMvlRE3CtKBvInep
      OCqw5poLAXA8+DZpkJkCDBdzJzcMY8T/UlUV5XL5SMl8URRB2dzcjMnc3OtkdPCYrGLipVqt
      jlx4GteGq1PyAvaCbEqIi97mFtFMURRFxPXlawUwonRcaZgss20bzWZzInWB9QblcnnPayU8
      z0O73RYdMVj6+SIEs1AoHLviHCIMQ3Q6HRiGMbI4USHq9TriOEalUkG1WkWv18Pd+/fx9htv
      TIz2PQ90Ckij0RAcHLIJAYjEFWkMjKzQzACG3R4YxpQVRLZ/M5kMer2eOOY4yHRiFtJw9Y3j
      GJ1OR2yPvCZSf2VWKM/r+z4cx4Gs5L7vi++Xy+UEPSMZxuW/cpuRaUAfxPM8oQRH7ZgqioJc
      LnfshZ9mDzC6I9frdVEE1Wg08Ovbt/Gs30O33UEUhXj/nXcPZIo+ePwYy/PzY60UndlQhgF1
      XcdgMBBRnE6nM5LF5ftkdDod0W+HgkQCm2maIpmlaZqgPqRVTum6Dtu2RVc29hcqFovCQWK9
      AZM+jAL1ej0RKmXoFdihQEdRhG63i2KxKJJzfJ9t27uc9OSN3A9kp1RVVVGcclRQFGWqHfxl
      gKZyr9cTOzYjbYuLi0KuGDKP4xif37sH5fIFLGUvYj4I8LOff4iHnTYWiyXcuHAR55eXpzr3
      2rOn+E1tA8r9L/Fn3/sjcT1cmIDtovhkmND3fdTrdViWJS56UhiRMWg6k3KkhXYeTQ+2PJEV
      gM4mbfJsNisEJlkJxsIWcnoozBR87kblcnlXqJXKl+zyEMfxSDmjrAg0wfZrviQL9Y8K7J5x
      HNmf3LH5f8J1XViWhXq9LnZLBi0cx0Hb0rGQHeZQVE3D1a+/ByOTgQvgw2erqLVaePvGjZFz
      0d+STaUwjBC02nj30mUAQ2vg5598DLfRxB9///vDhf3p06cxhZYrZBK00cYxPWXFSOv9mRSo
      SqUy4nzqug7XdYVNaFnWSB9R+TgUcL7uOA56vR5UVRX9fqIoQqVSgaZpI74Hu0EkhZkKRedV
      /m50LllkPi14P3m8w84Mswb5ZbFPpwHNHjJvNzc3RShb13X0+31RHUgmb6PRwO1eC/m5ubHH
      DTwPy4MAH7zz7sh9/esf/hA9XcVSsYRvvv2OuC+e5+EXn93G/QcPoFXKuJbNoQdgw+tD5RYl
      O6RpK/20ZgAVhT/J35kt5sPjysUEFlcBecuUr4E7Cklx9AEACLOJcXgyT4lkRhoYZotrtRqi
      KBLtEmW6BnMOJOztxxzyfV+0aDyM2Db9qlKpNDZEfFzA+85seLPZhG3b4tozmQyKxaJoi8nF
      sVwuw273EE7YNXXTxHrGxL//0d+h3myIv7996xaCXBYbhorf3b0LANja2sIPPv41Wnkb1Tdv
      IVsp46E/QCdjoLyyDD1p96ZFZibF09MegBzuSqLT6UDTNGHKsOtaNpsdEVi2UaTjQ99CTmo5
      jpPKu6GgJmsGuPXK5gJ5R4w9czeQz8X3tVotEXPfS/BYkbbX/ZgW0573uEBOWMoOrixflAH5
      /miahvdvvo6f3f8S2XPjbX3N0IHzy/jBx7/Gn37j94d+nOsiCgLMOwqWrl3Anfv38cv7d1G+
      fGl43xTAyudg5XPiOMJrkldrOSGVFAQZk15Ley/5/0mbWK4lTkIOdcrnS/Le5f9HUYROp7Nr
      ZwOGu4SsAHTOKVxyRVea2cL2jnuF5Xjew1j5eb6TIvwE8zG8l+MKoWSZi6IIm1ubQHZ4f3vN
      JrLFIpQxJqRWKWNjawuXL15ErdWEEsd45fJlVOfm8Mu7X6By5fLEaxw5alpGNPkA5a4K4xxj
      ZkDl2Hla9nU/oIISk1ocKooi4v/y32h2yTBNU0SP5F0lmRyUr99xHGHbjgN3ucNghh5nU2cc
      oihCu90W2f5xARQ5WEA8bTaRpeyEEWq//Rz9Tjf186qqIoqHcvH2zdehKQp++eAe/voXP4ej
      7x0Y2PPJTLrxsp0PQLQur1QqKBQKovVJsh36tJhEU5CvYdxnZWfatm3k8/mxwsh8B3MVpEBQ
      yZK7XZLGMe7a5UjTQbBfVqlMJZeR9IeOGqS6dDod5PP5iedOkiQvzS+g12gCALJzFai2jTdy
      RdjNDnrrG/C3Awv+YIC5IEbGyuCHH32I+w8fIlIVqHNleNUyMqXdAZ0kdgWOk1uVbHMDSH2N
      tpvseBYKBdi2Ddu2RSiMYH+evZCWUeb5kv9PZqIpsJlMZmQ+wST0+31xvna7LVZ4y7JErkAe
      5jEp7i4rzkFBBZ72GPSbqLxMOlG5NU1DpVI58t2E0bq0IqkkGGqXE5jVahXK79aByjCUXb5y
      Cb/bXMd/9f7XoSoKHq2tYaPVwFKpgiAT4ZePH0Ivl/BprTaV0MtIfYKyiZP8GxUkqdEMdZG2
      zBs/Lnqy3xVx0k2UX6PpQo5Ss9kUkae9YJqmMIHkEk1eKzu/0WyaBO46LFaf1gySfZH9mD5x
      HAv/hg3K5AQmGxR3u90jp2qT2k4LIO1aFWXIHF5YWBBMhBEzs++CuVtV09BXhqzihfl5vHbt
      Gl4D8OjJE9zeWodZLgEActXxodNx0JNbO6MtyW1f3s41TRNCnaQQcHhEt9sVtjhxGLHwNKWU
      dymudDwXM8D5fH7Xis16Y+4aVGB5mg0wVCaO+Mnlcqmt0pMghYLF/9Mgk8kIf2S/UBRFtIsk
      5SDN/+j3+ygUCvs+/rTgMwAgxmIlX4/jWNR28BpJUQG267oTtAcNQz7Z+vo6/DjGe2++uT20
      5PnMOhXYe3WV6RL8EuOqvfr9PhqNhpivxWNMEzFKuw7uNslsddoPry0IAtH6hL93Op1d9Av+
      zvfJwpK8lna7LVLo++Hb7McHeN6kFvMgwKj/xGNSKY8SnucJblVythuRlKlerzdCF9d1HVoi
      UmgU8ojiGCGAewMH/89f/Ts8WltFY3Xtua5XUCFkyL+nRW+S/TUnvV/+f3LHSL6eZnqlHTf5
      N/k4vDbbtsVN5Tk5d4znkifMcFdLFsjLyuu67r6FVG4KsBeed4c0DENkWOXqOh47m80eGasS
      2Mn8kumZhLxQ8R4GQSACD4SqqjiXL6AbBNBYxG5Z+HjtCd67eBlXAx8PL1/ERjaD5ZujlIj9
      Qp2U5Bq38spbelJw5aRG8u/ysSedj8edBvKxmUkkD0iOQZdKJRiGgUajMeIw00mmIiRLN2ke
      ATtx7WnBcPDzOsP7QRRFooYB2OE5MShxVNcht4Mh/ZsU9iRyuZxYoNgVhKAcDPxgJPavqCqy
      55bx8dY61l0HumUeikm9ywdIIpkYk39PPtg04ZU/O01n5uTrdAYnFXvzumT+EO1MRVFExIYz
      BngOFq/LN1LXdeRyOVHRpes6LMsSbNH9ChDPv1dFGAt0nhdsi2hZlth5jpoi7XmeqKsAhqt6
      klPG18rlshB+5gmSUBQFV8+dw+1nT2EnssGZShkxDm+00VQ+QBJpq/W4hFRSQWSFoHDw97TP
      TCNwiqKI+oDkucmR7/f7Iz1BgZ0a4yQMwxBOLynYxWJR7Bb7AXeBad5zmKuzoigH7sK9H7D4
      J3nutOuRHd9erzdW+BVFQalYxJJhITjiOWf6JAc1+UXSfIWk4CZ3ieTnbNsWNippz/JxklEl
      htMmwbbtscXnvKbBYCAcQDpnQRAIvhF9ABLpuH3LjM6Dzrtloc648kgWzbxs7GeHi+NYmDBA
      ekROPhZ31mmPH4Yhnrk9ZBcq+/kK+4YuE9O4GtLulX+S0QwKvMzloLCNE35gpy1hr9cT8epx
      701eS+oXmOLGKspw5BIhR4nIQ6LicWoN+UKFQgFR9HwTF+mUj/MfDpolPmzsVwHa7baQjaS/
      mEQyETlpqGAcx7h970tYK0u7jnHYtRUqK/Hp8MkOYBLJ8BW/tJwYS3OI+fdCoYBMJiNIcWkr
      e1pYc9KDOYjpwIIY9tKRr5GNe0du0nZRzCRF3Au0y+XvRRyH1R/YfxQq+V34bzab3ZX9Tyb1
      Jp3r0eoqnFIBZiJiNS2DYD8QJZFy1IMnA3YLdNpWl/ZvEqqqIgxDEU+n0vEcshCOixIlX6Ng
      HhRyhlp+OJ7nodVqIZPJjBz/eW4+/RHWHcgtG49zC5NxUblkdl+ODDqOsyvcmhzWN86s3djc
      xD2ng/L5cyIIwVX/KLhMOrATOw+CAM1mE5ZljdBvJ4VKk7/LQiq/zrrdtM8nQ6fj7Mg0c+p5
      HMe0yTE8P+cIJBWTAnxQMAur6zq63e6xWf3HYdyqS9M5TTZIIpTBxgS2bSOKIhGAoOnJoEO3
      10PwuAev30fmkAMDadBZWRTHsXgYz549E9t1t9ud2nmRV3QgPUHWbrdFGIwmB6MtyRUXGHWK
      k9fwvHWwtPnlpFHymuVzssNEcoTrfs5HsN9R8u/HDePuMa2FNJ5Xr9fDXKKkUVEU0byXodpy
      uTwSePA8D/l8HuV8Ho3VNRjXrh7Z9yJ0TdOE4NMxXFxcxMbGBsIwRKVSQavVGvvQx92I5Hvl
      39lepVAooFaroVKpiI4SyVAmkL6zHEZyiaWVPGbyvEmHi+xKOtHPg5Nq+sigeSKby2EYjoRf
      ZVOXJbD8nfkRRto0TcOzdgvauWXMH+WXk79D8g+MggA7VVckdck8kmTUR44EjMsd0BGWhbdS
      qYje9kmHNPn55N89z4PrugeulmLmcly+wvM8sQOSXcnPTcswPWmQgxppNdQE7XM+F13XUSqV
      RHw/l8sJPyeOh7R0ucNfHMeCL8b3RVGEzVoNmD/a0KeMVK+OYUMKJQewJUFBoZ0oh0qT22JS
      wKgsrB+QFWfS6i7vAr7vj3SI2y/2KpBhP5tmsznSilFu7nSawNaEjUZD0MIngSYrhZ+dwC3L
      EoxUgn2mkn4ho3ikbvvhdPf1sBafsWENRdkpC4yiCOVyeaQDA9/DXUDuCzQOSTMjbVVP0iXG
      8Ul4PK4kB0Fa39HksZlESzr2z9NC/TiC34X0bbnR2TiQezU/Py/MZ7m5QPL5yp2f4zgWPYFo
      Om1ubqK2nVib9nqfFxPjeixukTOlvDlpQjPpZqVFjMa9Nu594wRV7uu/3/baabb8uDYmslLI
      w/1OCxiMAIaK0Ol0pl5p+/3+yGhaGXIdCY/X7XbRbDZFdCiXy2F+fh6VCWN0D4K9rn9iDI72
      Pz34QqGAZrMJOXI0LmSZ3O4mCWVaqJN/I7Nw0jHkThO9Xg+WZaFUKk00b8IwHCHCpeUZkp9J
      Xm8QBMfakd0P+J3kezYtdZrRQq7kHJTCBYKCLzNUe70eut0uHMdBEATCHF2qzmPjEL/XXovh
      npkdlvbRVqtUKqLMkSdI/siflX8m2fWHYdPJJovckSAJeaei3bvXTpM8D4A9TYSTCHlHnHYn
      5T3ggtLr9dBut2EYBiqViqCnE1QUDlPJZDJot9tDs9Jx0b17D60nq4gOaeJlmtkuFH7aA5Cu
      m8YwTEt8yfSIaW7kfgRw3Ofln36/j62tLWEWyULO0G8YhoLMlTzGNNfp+/7Ywd8nDXxebLkI
      QDBo94K8i7IbRKFQEA5xcifudDp4srYGz/ME3bxcLsN1XVy+dAnffusdfOf6a2g+Wd3395AF
      XBb0cf7p1Ll9TmHh0AJuZwyBpp2YpoZc1sgblvyMrETJ9+8XshA7joN6vY6NjY2Rh9ntdlGv
      13d1uUiuFknwWvnjOA5qtdpLmQ18WIiiCPfv38fGxoaof2bIexqfSlGG8xpYA5zNZlGtVkcW
      ysFgIPyE//sv/w0eI8TffPIbYUk0m01Uq1XEcQzDMIZm1ITT7hUlnBZT5+EVRREe+/z8vIgI
      pUVy5Nh68oJkRyht55BfSya8pvUjpoEcek3zVdISeaQ1ywk0YHTww2GTtY4a8i5Wq9WQz+dF
      aaU8R3mvThKLi4twHEd0zpMZBEx80i/8+o2b8PwQeqWKZrMpnoE8B0JRFFypzOFJswW7XBo5
      l7yqp4Xbp0niEfsiotARTiZIZFNH3g65yieJdeNW/bTMr5xoYcy5NSZUttcXloXeMAwR657k
      /CY/77puqsLE8XDIQz6fnxi6PW4IggCe54kufvT1+PzYKzWNDkOaOBWFOyLx+PFjFIvFEflQ
      FAWvXL8u3tNoNHYNQSEuLC1j67e/hW9nYIwhPU4S+Gl8y6mXK0UZVi1FUSSyevx7Upjli5FN
      pHFCJr+HlGwqGT/D+QJpvfonRW74wwfJPj1pJLRJx+Uxkn9LJnZO2pze5P3kd6rVaiM0BkZr
      CDJ7v/rqq7HmX1qXiiS4s6aZvA8eP0LH0keEf9wxxv19L+xrv2Y+AMAIcS3N4ZCFj4KdBllh
      xjkuXFlc1x3pIiZDXmWSziz/ZQ0wrydZbJMm3JMcYx5nP1vucYM8p4szmJNND/g+uYCF3TOS
      zYaJOB7WaJNOM+7eUEm4g8jPImtl4LU7iFafwa3Vp76/k86XfN++TCBZkBVlWONJ246hLdlu
      T9r2vFHJbWuc9lJIaW8rioJmszmyestKJv9ffl1Gu92GpmljQ5hpgj5ph5HvCUc8HVZY90VA
      DnPze5DsJ4eR+b44Hsbwnz17NtK3NM2PY93DpF5EcRyLkCl3Z5bBzler+OOVFWiahh99/BvE
      c5WxXaInYeA46D14BCuTQWgZyK8sQ6UsPs+cYLnAhYKc7MmftvqPK69MgoLEqJC82k4Sykm/
      83zjfk+z7/meNIdLUYaUkWKxCN/34brurrj3SUMQBGi32yMLhGEY2GrU8eDxY1xaWkYul8PT
      p09x4cIFAKPPkHJQr9fhui6WlpbG9lNi4jLpA3Cn52K3sbWJTx89QuHaZWDKexvHMbqbW1iB
      hpvXryOOh7SZn3/2KTzLgqE8pwIEQSCmS8rmwDhymxyHTzrH4xRA/pfv5TnGIVmjOgnJcycV
      gOdj8yy+V/ZZ6CAyinKUzaeOGnEc75qBwO/8Xz76BdTFMja/fIhr1WXkslkYhiFWeL6PQQry
      rOr1Ovr9PqrV6si9iePhwPNxM86Sz+bR6iqetBro9wcwVhZhTWhS0O92ETXbyHgBvvHOOyOv
      dTodhFEEO5N5PgUAhkpQr9eFiSNnVik8sgKMs79lZZFvUPL/PA4nsKT5A9lsVmyn0yiAfNy0
      0KumaahWq2LKpeM4ME1zxIEcDAZoNBpiDpnsyJ9UxHGMv/3xj/DGzdfxy99+ivzFJZiZDOI4
      xsbDxzB6A1xeOS+mPRKMlMmcoDiORaEV2cV8Dyv7pr1XcRzjydoanjRqCOYqsHK7FaH/1WO8
      dekKoihCZcKM5+dWAACi9yZ3hKRdvuukCbMoTVmSkHcU7gD9fl8MyJb9AkVRdhVrTFIEWUGT
      Oxd7ATGbnMlkRDRMjlS1Wq2RCBCzmydRAfr9PlafPkUum8XHdz+HUsnDLu5epaMwQnN9E0G9
      hW++/d7IMyUxTp4QylB2v9+HYRjY3NzEuXPnJjZimIS79+/hqakhk2j2G8cx4rVn+ODG63se
      81AKUtl17eHDh8jlcmLqhyxUMuRdgBechKwQ8t/4/jiORV8fDqNjoor98fP5/K6220Ty3Gnv
      4fcg9ZkUCioYkRb+pPIdx/Gle+Gnv/g5gvkCFKcBbb6EbDG9m7SiKqgsL8DtByPPBhh+f3lY
      OuP9NI9Y/ccySVVVxWhefm4Shs13I2hmuoPd6w3nR+9Vc30oOwAw/OLsCs0LlFfIZJx3mhbj
      4iJTzKNk12hFGVabseyOPJZisbhLCZImTtK84v8Hg4FIArGPaLlc3nXd8owzhvR0XRfD/04a
      2u02Pr/3JR5uPsPyjWtASriX/+9s1ZHtelhZXILneSPPtVIZVnbJCwhNHhYz5fN5uK4r5rQx
      38CB5mmI4xg/+tVHcLIZVM6tpK7yg24P3lYNX796HYUJFOtDy9szjswLTL6WvAZ6Ml4AACAA
      SURBVEgqxTScn71i8cDOxBaaYaZpYm5uDvV6fWRWb1Lw05xevsdxHDEZBthhf/Jz7G/E3YY/
      ZDmeNFoEUSwW8cG77+Hbb7yDXqM18n3Z9jyOY/QdF6VAwa0bN1EoFISZSEo06zRYUy47u71e
      D6VSCbqui8a9NGWpFGn3j+3p+z0H1oRmv1Y+h9ylC/js7h1omoZisYhSqbSr6cKh9uRIboPE
      NKHI5Pv2st2SjjVXa6JWq4lVhcO1+eXpqKcdkysdR6rKrVdoDjFsR6KYXFXGFfC4tzvZC4qi
      4Ny5c7j/8AH8nA89a+8SSL8/wNr6Oiq5grhf1WoVijIkx7HtZC6XQ71eH3kWcqc+eUfRdR31
      eh3ValXUi7Pl+tzc3LB1SreLoJRHeW5y7XDoecB21RoVj4wA4kiWKFk401b5tN0guSJPE71J
      qzfgsTOZDObn5wWDlYU9bHIrm1WyPxCGoaBMMGQ3GAxEC0Y6/GwLOM5WPYhTd9ygKAquXbmK
      rSfpQyhK83NQcxlUKhVcuHABS0tLwg+7cOGCaCRAc5Cku2KxOFJPkqzPACBmmZmmiUwmA1VV
      4fs+NjY38TcffYj5q1cmXnvg+9BX1/H9b31b+HIUfNYne553uDuALLzjHNy9Yv7JXWSSEPFY
      JNLJhDpmMpvNprjpjuPA9/1dxTndbnekAZSiKMLWVxQFKysrsG1bZEYzmYzoRn3ShXwvOK6L
      yvLi2NeN7SIYub8sM8Svv/46ms0m1tbWMD8/L1bvbDYrKOQLCwsAdp5zPp/H4uLiSA6CUTfT
      NFEpl7FcreJJo4nMNks07Rm4q0/x53/4h6K5meu6IjTOxbnb7R6uAowLOyYF9bCRjBixcIfX
      w3OTzcnVRx7klozW0KdhTJ9OfrlcPjVlkEQcx3j05DHsTAaaOmxYxSBGr+8iW9khPnKX5OJg
      lov46vFjfPC1r8F1XbTbbZHdZWlqq9WC7/uwbRutVmsYm69UsLa2JqgttBJUVd3Vg0pVVTFv
      QNM0/N7b7+DVRgM/+fILeLqOTGE3VduszuHO3bt449YtABB1Kfy+wPZIqsOKAgFDaqvc8zJ5
      UUlBHWfmpIU+5d/TlChJ4KpWq6LHJ9/vuq4wWer1uthm025OLpcb6f1D8+ykOrbjEEURfvjz
      nyIo2ojjYWhz0OlBVRUoMbD1bB3ViyvI5HIwLBNxFKPgBMjoBp51mpjPF/HWjddF9thxHNEh
      hDZ7GIZYW1sbITPmcjl0Oh1Ru817S6WZZqHsdDpYffoUD9efwosBv5CDbhrQLQuh7+OmaeO1
      668AgKj+kxmth74D7GW2TCP8hJxh5YrueZ6IxZPZmSTYUUFkYh4AMd+LGWTbtndNkpc/n+Su
      nAabPg2KosDrD2BUi9ANHbppIifN2i2dX0av3UFrqw6n0wFi4PvvfoCVlRW8IR3n7/7+Q7x6
      /iIuX7wkVnnHcVAoFKDrOi5cuIC1tTVRz7G6/gxRHIs6BJIek+ZpmglNFAoF3MjncW55Gb1e
      D4/XVhE5Hu6tPUX5ymV8WdvC1UuXRWi8XC7j0aNH8H1fKNmhKsA0SR9+IdqM494jKwAHaliW
      JQouDMMQdiWwW0Bl/joFWu4mzVVf/lxS+JOJuNMIRVHw7uu3cO/hA7j9PvyVKqysPRKZyRby
      yJeK8AceokZ7JIJD6DFQnRuWQZbLZbTbbTH/IZ/Pw7IsXLhwAe12G/efPIJ9/QJaG1tYW1sT
      uzIHlTOqFsdDGjyfOXeOZISNzcsunb8Ax3FgqCru3b2PIJdFrV7H8tJwzoDneVheXobv+1hb
      Wxty2A7TBGq1WiJmPmnFpNBOmvwiU3OZ0WOCSzyYbHaik53cccZFmvgey7LESKXTLvgyPM9D
      o9HAb+5+AevCjsPL+6eqKvqNFq7mKrh+7douM5AOpW3bI8LJPAADB6TPf3H3DtbqW1gslHHp
      4kXYti0ib3NzcyKZCOxEheTnIdelMGpHrlEmk4Hv+yiXy2KlZxiU7AFSV4BDzgPIpKZJDu9+
      Ct5ZbSQPr57GCU0Lpya7lSVXf9bDnjX4vj8sbQw85FLyF16/j6uFObxy9Rqerq+j3Wrhwvnz
      yEsZ1iR9GdhppNDr9cQ4LE3TYGg63rtxS7zOEDOw87yjKMLGxgbm5uZEjocdy0l3kYMewNAk
      Yr02lSQpa+zwLT57mDeSFyXnAdKQligblzzjqt/r9dBoNNDtdoct9Gq11PfLuQc5B5FWMSZf
      60EG4J0GxHEs6npjyxi5J/xxGm1cunARW7UaWu0WFhYWRvIfNBuT909RFJFMZNdoXddx8eJF
      ADvdt+XOcXKPoUqlAtd1Ba+I1WUU4ORzZDOuwWCAJ0+eoNlsjlwXn7Nce3DomeB8Pi+mMU7T
      JiT5RZIoFAojIzfHrez82ziW6SQlY7XTWTJ7ZDB5FfjpjWkzpgFvMIBlmnj9tfTB1GljUfkj
      95JiXJ/TN9vt9gijV+7zatv2yHPhOZLWhZxFLpVKmJ+fh6qqqWO42LuUDYAPXQFyudyuEUiT
      kLTTk59JM6WS/B3+O8lpTXamkD/PSMVZBFfOdrsNzdxt/jlbDVwpzIkmCEnIiwyPB+xM15QZ
      oQSJhb7vC6IhFYPdwnlsHlNewGSzlbs8fU/P85DL5RDHsehUx2k/PCap68Vi8XCdYEJurLrX
      iNNJmJRLIJImjVxoI793EhWjXC6f6Cqu5wWdw4ePH+HhoIN44EH1QxiajhsXLmF5cQm9Xg+3
      P/8SG/U27jzaQBCGmCtm8dsHT1GyDfzXf/AOrl29IhYTmp1xnN6BIwxDOI6DbDY7YpLQGQ7D
      UDjHzAJrmobNzU0xTIOKw3wCeUSLi4u7HHWyUKkslI8jWfYYrmRq/CAd0yblEsYJ9Tj6xTjh
      p4L4vn+mFYC7wCtXr6H18W9w89VbyOfyQjF+8KNf4q9+dBtPmh5iyItSEwCg11r4H4uFEZKh
      oigTw+KapgknWl7ZLcsS7dXZZICBDx57bm5OPG9aCPl8HlEUoVqtYn19HcvLy7vC4oRM2T4S
      BWDqul6vj33PNFyfSUja9JOKa2RbP+1aTyJn/6hw/fIVeAMPraCFTqeDf/FXf4uPvuph+2ml
      fiZWVBGu3E/HbJownueJPA13fZmXRRNGflYjjux231pg6AekcbRoGSSV8sgMXw7EZj+ZpCnE
      1Ve28dP+pZYnyWppu0Dy90mCD0AkbU4bveGgoO/GXdEwDLgDH7yjqYtVHOM7t5axtLg4UiA/
      LegPjAP9SobAt7a2sLy8DGCneS8Tc7LypJEr2+22qN7L5XLD4Xz7utp9QFGGVFYWIqR1h5PD
      pUnTZq//J1eKtCjPJOTzeRF9OOuI41i0NJcXJVVVUS5k9qSB0DQJgkA4v9Occ5rnJZ/75x9+
      KAatr6+vIwgCVCqVkVWdfmeyPQ+wk+hkZZqqqke3A8gwTRM//c2v0VVVaH6A64uLOLe0NJI4
      S/Pyx4W70h5G2q4w7n3JmoCzjDgeFvmwppmhZEVRsLr2FBfnslDiJmJljD2vKPjR5zXc/M1n
      +ODdN1Cr1UTXQLaMSTrBdHT5+jTdMzqdDj785GP84+9+D61WC/l8XlSgJc2aarWKTqcjOndQ
      HlhXIO9SLyz2d/nCRdxHhHBzC/eaDXxer2FO15HTNCAGGp0OBlkbGUXBe1eviW1x2lUizfTh
      azKy2exM+CUEQTBCL+HK/8OffoT/9ydfYBDpiNXJ2fFY1fGvf/gJrl5cRrFQgGmaYhXudrui
      AIVgJR0bq7G7B9vu0zdg5ljTNHz6xReIt51c1nhks1l0u13EcSw6cPD6WYCf2W7jkowWAsMF
      9oUpwK3r13H3ow8xl83im6/fwv/3yW/gV6vbcQRAWV4ELcGf3b+Hb7/y6r6cKfn/8ueS0xzT
      muueZdC/AnaiI882tvCrO2voIwOo092r9gBY39jEfLUqjsXjN5tN4cCyblsGbXkKMNm+tAB0
      XUev38crN18Xx2X+wLIs0YWuVCoJzg9NOfoDJD8mHeEXpgCWZeFyoYj77RaebmxgQdXRGZO4
      MhYX8PmDB7i8vIzbT57gXKWMKyvndiXMOIuKhdicTytvcSRK0Rk/TXO9DgIKhiwoiqJg4Hm4
      9/Ax2p0e/s2P76IXaMD2/ZaTmslnwJ9I0eAFkxOR3W53quuTCXC06S8uLODZs2dot9tisjxB
      2kSj0RCdQVqtFrLZrCjEr9VqYpeTAypHrgBhGMJ1XeTzeXzw5pswv/gCP/z0E1ywMvARw6zs
      7tqlGQaa5SLW154gd34FD5otFBsNzG8XXDNeLM/5TfJCCJpSlmVha2sL/X7/TNEeGPkIwxDV
      ahV37tzB/Pw8qtUqgiBAr9fDxuYW/vm//RGedWPEUABFH4l4ppkQ7AIomLOKhruPN/D+27cO
      7drlZ7S4sIDiNk06LXGrKMP5dY7joNfriaIcXh+7BfL7iN3l0K52DOSEh+O6eLa6iuL588gp
      Ct46dx4/ufclrIX5XZ8zMhkY584BAOxKGZ+vb+Ib2zOnCoXCrtDZXpEKPjSZXn0WEIQhnF4P
      zdYwrq9vD7Ou1+uCd/Pg0RM87SqAMj5cDIyunMDu+o++d/Dh4XJ5ahJ0XC3LmhhhYsiUoKDL
      bFMO5BbHPvAVHwD5XA7vvvUWlG4Xq56HdruNb1y8hEG9sedno0oJa+vrY1eAvSD7BgcdrH0S
      MbfdseHNN97A1atXce3qVSFEpmkOOzisLOHqnAbsEXDYK2ScMQ++qLCWuNVqYWtrC7VaDQ8f
      PhS2u2maI7SJaUCaRBAEUNXhzGtSNQzDGPoRB77iA2JlaQl/8Q++g5ulEj66fw/nl5dxXjcQ
      BpNXD900ca/v4mef3cbTZ88OdG46TgehZpwWsDMGB1U3m03kc1n8b//0T/Cn76/AwAFX8TjC
      tXO7d/JpQTo6Bd73fczNzYnXSYXe7/gp8ouYiM1kMiiVSigWi0PFOPAVPwd0XUc1XwCyWXz2
      xRd479YtZGsNBHuszPbCPHrbceODQFEUlEqlfYVYTxPiOBa7XxAEKJfLKJfLmJ+fh2VZ+NM/
      +ib+5+/fxKId7rkb7IKi4gcf3REO7H5h2zaKxSLK5TIWFhawtLQ0MjvMdV1hzuw3iMG50TI4
      PfSlpUFXlpfxaqGATx7cR61Wwx9/61sodrqIt+O/tAl3Fbf0eiLUtl/QKZInlp8VxHEs+uKM
      QxiGePP11/C//7P/Bt+9OQc13t9ucL/m4//4v/4SX97/6sDXmWxwRjCSB0AUtewn+9/tdsXM
      aMdxsLW1NUzAHQUdej/Y3NrCs9oW3rpxEwDwq88+w/0oABL2Jm+IWqvjz/7Bd/YVxeGWynAp
      WyaelUgQMPR7GIZsNBqwbXtXICEIAtEMGAAazSb+5X/4CX7zuDfWQZahxCHevZjHP/n+B7As
      UxDdOFqJ9dZJNJvNPVuhcAFcWFgQiTI2PZ6WztLr9eD7PhRFged5w2O9bAWQQcLSf7r9KYz5
      9FXer9Xx337t62MdYXFjAFS2i6HluLLv+yMjnegXnGbEcSyyp8DQ4Uzr7EBahFzdFYYhfvzh
      x/jLH9+BE45xcuMYc5kIf/HdN/DBO7dGQtOtVgvlchlxPCycD8NQ1AETjUZjYhSPvB42MFva
      ptG0Wi3RKme/96PVaqFYLL64RNi0yGQyKGoa3DGvq6UiHq+u4pVr13a99uTpU/z07h2EGQv9
      Thd/+OpruHLpkmiPB4wOsut0Omg0GqLVYbInzWlBazsEKtfbpoErqwxN0/Ddb76P6xdX8H/+
      q79Fy9dFggwAlDjCt1+r4M//4TdRTFSN8V4GQSC6QEdRhE6nA2BY7sp7Pm0zLPm48uCSvcLg
      aZ9XFOXl+QBpYKiyOyHWq+k6Pl5/mjqP99H6MxhLi8iUSijrOqqVne7ByRukKIrIJ3DaDLDT
      NYBjO08D6FgWi0UUi8WRbg5JjBOiC+dX8L/+D9/Dd2+UocbDHVWLA/zF71/B//Tn/3CX8BOF
      QkGUKwIQrQ8LhQI6nY6YH7YfUEmz2ey+p3Jy9afiHbsdQFEU/OHb7+BnX3yOQbEgxlmOoFjE
      Lz67jfdeu4HC9hSYZxsbeNLvw7AzGPQcVFRtbB2rfC7auxT2IAjw6NEj0QM0n8/DNM193eTj
      iMO49gvnV/Df/0kVbv8/Y6GSx9s3ruD61SsTP8O64CSoCL1eb9+ZeY5x5fMjuS7tGJxiz/5B
      TKSK2pLj5APICIIAf//b32K100ZQLEBPhL7iKELYbiPs9xFnbEBV4LU7UOIYi7qBd2/eFIUT
      40DHmGE1rvpsgitWCV3HYDAQLfY4AeYkKQR7Y+6FZrMp2hWOA+tq91pggKG/Ic9PSCI5kXIa
      UNiZJ3AcRzj4crljq9WCYRiCmi0372IhzrHbAQhd1/GNt99GFEW4ffcu7qw/Q1jIw2DvIVWF
      Xi6LL+A0W7hkmFheWMD8/Lxouz0JyYgEFWFpu5VeGqco7XMnAf1+XwibzJGXIddmJP8ur7B0
      PKfZFaftDjItwjDE1tYWqtWqOL9t22g2m2i327BtW0T7ONCQYJOuSqUiFOHYKgChqirevnED
      b776Kp6sruLLZ0/xpNOGqRtYyuZQ9wZQ5ipQOh20wwiXLUsMz5Odpf2MLD1JK/u02NraEuFg
      hibTikmYg6HQy+WF/N11XRSLRcENmrS6T0payfUCkyDH+9nOhNcqk93kIYZpsCxrVxXgsTWB
      JkEu3vB9H//xZz/Dci6H8ysroq9MNpuFoijo9/sIggBzc3OoHjCBdtIhj68FhmaJ4zgiKShH
      RVguSPT7fdGcmMLGqS3JIhqZjcs6AJnOkCx9bbfbIiQ6iUYtR6ZarZbo7K1pGhYWFmCaJjzP
      Q7PZFN9BPh4rw9LOc+x3gDTIX8IwDPyj3/99MamRnSg4AieKIjGEDUhvvnXawYWi0+nAtm0U
      CoURrk3a/fB9f8gTyudRKpXQaDQE/ZwhZC405PAAO9NBmWyTmyEkTSuaR3Jb9GR2N1ndF4ah
      MMGiKMLjx48xPz8v/AyGRJnsTPYrTeJEKkASbL2XzWZRKpXg+74Ykkd7l82auG1OAkvxToui
      KIqCWq0mkoSL2x0cGIFhlRS/b6/Xg+u6okwRGIYcNzc3Rb9OJhDb7fZoieF28ym2H5ybm0s1
      g5K05r0IilRiRn54zmw2K6jdrPazbVs0zkoiWS9+KhSAkItlVlZW0G63RUUYV5i9hP/x2hr+
      1X/+W/yzP/sT5FMKuk8iVFXF4uKiaCvCVbbT6YjOy4yYcYwUpz0STBRubm4CgMgkc8oOd1ZZ
      kOM4Rr1eT43GybMeJqHdbiMIAlSrVbRaLWHD85xUOs4bS1u0arUaHj9dwztvvCmu61QqgAwm
      urg6FIvFscLsBwH+7Y9/iV892YASBvhfvvctII5Rq9VEaxdgdGYBoyAnZRL84uKiCIPy4XMl
      dRxHdFFwHEeEQRuNhmgyyzGoS0tLohA9GR2SzRU62zLzVn6diue67ohNnwQd7W63O7YwJwgC
      PHjyGI/rm3jjynWsbjyD6/toDRz0Ax9mPgvV8cR3l5Xk1CoAMPyyCwsLor06uyAnyyfvfnkP
      P9h0EWfn8D3bQ3W7oRe55FtbWwAg6o/ZrptFFScBpBuYpol6vY5WqyUGSNu2jfX1dUE/bjQa
      gmbAcDKTSIqiiOZZ3FnTzBeu7mkzmX3fh+u6QilJ0eYOwrG0AIRtv76+jpWVlZFCdwpyPp9H
      uVhE3Yzx0dMHyBYLUBQTOTWPHLbrjHsbqffl1CtAPp9HNpvF48ePEQSB4KOoqor+YIBnG5v4
      l7e/QqxlgDjCeqsjMosE/y8/KNd1RZPWk9JpgvaxogzrZ0lFqGxTRjitnWg0dir1OOyu1+uN
      hC2TPBz6WTJ5jTtFGIZoNBowTROlUmnkvfPz84K0SMea4Ey3pBMt/35+eQX+6mOsOx1AUUbm
      nLmdLt64fC31GR0rLtBRgTYwJ4/TYW632/gXP/wpNtXMkOClavjcxQh3ZRy4Et6/f190VDsJ
      4K4oT2as1WqpZDJZGajktLnTQJu80+mgsF2/7fs+6vU6ms0mOp0OyuUy8vm82EHK5TIMwxBh
      2bRBG41GY+JOy3t/5fxFfOOV17Ec6HDvr2L1i3uIogilUMXKGFbAqd4BZDAMKuc8Yk1Hs3xu
      hN0YFefwz//uVzA0DX90/Tyun1tCEIawE3FvYKgouq6j1+uJvpgnYScwTROVSkVM2my32yMU
      App+FHo5EUYBlQcQUvA5hpSRN34ujXpN0FfrdDrCH0hiYWEBzWYT2WxWRJTka0oeb35+HqvN
      GlZevYruVgPvXH997PnPjAKkYb5UhBV6cOLhTSfFYis/jCb8668a0O+s4VUrxj/5zjfE52Ti
      HFcmUV+7vbp5njcSRjxu4NRGDrHjMGsmi3RdR7fbFbW6KysrAHYcZyaegOF9q9frYq4yFwHX
      dXdxfNLyMDSX6KfJ02SA4U40NzeHra0t0Rp93I4bRRFu37+L/JVhR5E51ZzIWTqeT+cFII7j
      YUgvCkdS/3xNVVWEmgkvZ+FCIRB/l2ceKIqCzc1NLC0twXVdIeye54mSTjqZx3Fn4OprmqZw
      7DkoMI5j8Vqaj8ORpSwukns0EZztzF2X5YhxPJwaKTexpfnT6XQEUU2u2uv3+8JBLxaL4hr5
      7LZqNTyqbyJQYlQunYeqaXA36/jazbcn3oMzqwDA9rjNcLTrWVpU42Gnj9/bVo719XXBOykU
      Cshms4JFyuMYhiHoA48ePcK1a9eObTc6MjEvXbq0S8gncXSYkOKOkM/nRyI6AESyTQ55Li4u
      QlEUMQA9WZvAhaXX6+GzL+9ANXSEmgI1iPDBG2+LyjJOkdF1HXcePYS2VEHllUviOG6jhfcu
      vQJ7D5bpmVWAfr+Pv7l9B9383K7488jvcYxezxEpfjZ6JV/GdV3RcLfZbCIIAjF2NI5jMRDu
      uCoAcZAdKklJ4XR4YMdMLBQKePLkCS5dujSySIzjn3EXyWazcDXg3KuXAQCdWgONRgOVSmXE
      IV7f2IC+PId8ecfP6G018O75K6hKPKRxOLMKcPfBQ/y04QH2+OqohfoTXJ0rolLMYHVtDedW
      VuB53ghZjIIvO4OlUklszZqmodfriSZUpx2u66JUKgmKRBzHgoS4n9prx3WRzQ8FXVEUmHYG
      juOiHI/WKnieB704nAgTeD7Q6OD3rt9AaQ+GKXEmFWAwGGChUsZ/d6mE/3B3Db6RwcDOA6q0
      8kcRykqI7711A5nttD3DeMn2gKxnHckwSs6v7FscR1/gMBDHsXB6dV1HuVxGs9kUJhIjTtPi
      zrMnqFy7KH73ntWw/MpwROuIE7x9OwPfR74f4t13vrYvRTs1CiBnJvd6H2sF3rh+FTevXEKn
      28WHv7uLHw8sxNZ2GE4BitUqctur/aRIwjQ3vNFoIJvNiuTQaSvAJ8mQERy5jgAYLjrTjk/y
      PA+BqcHpdKEqChRVQdm0RwRfpmEEvo9yoOC919/c9z09NYkwOrB7gb1qgJ1oj6oo+O77b+Mf
      VxQoAxdADEDBvda43hT7AyuUer0e6vU6tra20Gw2D9xF7ThCFnZSllk/0O/3oarq1DuA4zjI
      OQHyDRfXrBKu6AWUt80qYFS5zq+cQ6bp4mu33jrQgnJqdoBpoaqqCM+Rk8JmqR+88ToGn/4O
      iPvwowhb+v6zu2nEMIIRDnahiONYzL9lWO+k1RoTxnbXaTa3tSxLhIx93xecnmky5qtPn+JJ
      o4Fv3LqFuUpFJObIYNU0TTjCxWIRf/Ctbx/4us+cAjDpwxCd3I9GVVX8wTtvAAA+/PhTKLn9
      V8rt9YDl11nEI4Ps0+OaQBsHhkK73S4syxL3lVyf/Si1r6oI5heBbc6V3C6RDjY72D1vjuVE
      lkQ+D1zXxYMHDxCGIcrbneOSr5PkliwPfB7ID2mvB6aqKsrl8sgQwZOCOI7x9598irW1VVy5
      cAGGYYxQIcYV48t/r9XriKBgYa6yy7SlMjmOg2q1umc98V44WcvMIUDXdczPz4sMpIw4Ho7n
      2astyEExrSBHUSRKOyuVyoHmIbwsKIqCdquJWNXweKsOKEC8uoa3X3tVKPQkVicAlLeZouNe
      j+Nhn9FJDb6mxalxgqcFW/TJ5C/CcZxjJ2z77Zp2HPD+O+/gAQzcsQq4YxbwuWZj7elTxHGM
      rVodv7v7JdrbHKRUivJ2Ec6kBYNU6ufFmVMApv7TbMejzNge1Iw5KTRrGaVSCa8Vs8A2uVDP
      2Li91cQnX9zBT+/cxcexiX/369u76i4IhrRZA5wG8oCeF2dOAYAdhy25CxQKhakmGR7kfOMw
      ScCnqWE+rija9siQjU5lAZ9nSuifuwItk4FSLCFIEeA4jkV9heu6I12tmWk/zEXhTCoAAME4
      lBNStFEZqyeCIECr1RJ2+SSBTr5GXpDszDKkt9eD5E51EqEl5gsnnXkjm8NWs5n8GKIoEgVL
      hUIBhUIBq6urI4og062fVxnOrAIAO0UyqqoKElehUEC1WoVpmtjc3ESj0RDdyOSCkWmVoNfr
      YXNzE81mE8+ePUOtVhtpUjUOmUxmpInrScP7N28gbtbHvq5ZGXz24Cv87JNPsbm5KZKC7BFE
      kHWaz+cRBIGoyXYcRzyf58GZiwLJ0DQNtm2j3++LWQFkenL19TxPJF3YykPeOdIqkuS/sYqJ
      Y32iKBL8mElKlMavP0kIw3Ck0m4XFAXd81fRdHq4MBjAcRyRMWfVGTPJHG8rBwRyuZyglkzC
      XrMDzrQCcHUZDAaibw4fAKujXNfd9V76CXIMWuamyHwVuSJqmrCdqqojw+FOIuI4xr//xUdQ
      SpWx7wl9D5nGJrJRhOqV10W+xfd9saozf0BmbUkKj07KuMvXwXLVcd2nz7QCADu+AG1PglVS
      BG+4aZqC+07Kr1wKKLdbOQjY0u8k48HDh1jVrIk7WDQY4FtXLmJxfnS0pm+1iQAACKZJREFU
      qmEYmN/+m6Io6Ha7wodqtVojlIq9qBVsm542D404uXvsIYLmiQxWLdFPSEYfuFJziz0snMSw
      ZxJPm20o+nTRq+S9Y+a31+uh3W4jk8mgXC4LioXcmgZIb6nIHAH9OtIx0nDmdwAAgr/uuq7o
      Lk1Mykjyb3xQB80hJJ3qk1w3EEURPt+qQymMN38AAIoy9nt+8uUXaA36KJsZXFk+J1b9ZKc5
      VVV3Rcl83xezEPgcJ0XSZgqwDU3TkM/nYds2HMcRikBHDNjdWJV9bYBh2+5xCjBpq2Y4VCbk
      nVThB7aHcTcbMAceOpo+LDKKYyCOoeg6zMLQbzKyOfx6vYZKqSQm7wDAnUcPoS9VcT6XRRzH
      uLOxiflWE5fOX0Cj0RB1GXIBP8HGW8ldYVLjspkCJEBFYIMn0zR3rc5poOOcTFzJgj2uA7J8
      /JNu/2uahn/6J/8I7XYbnU4Hvu+LhGPf8/Dl+ib6YYhmqw1d1/DlvXsoFgp4+HQVuVIR5vI8
      7NzQIVYUBaWFeQweb0BRhiOR2CIlbbFhokz+fa86kZkCpICZ4gsXLqDZbIqbndwJWACfTNDI
      kFf3tMhF8jPHjYt0EGQyGfT7/V1VdEUAi/PziKII3W4XhUJBmDJO4EE5Nw8tQQMPgwDZ7fuv
      6zpK2ztGGlhpJytBcgFLYuYEj4GqqmLwQ9oNdF0XruuKhrvtdnvi/F3533EwTfNEx/4J2uYT
      BW/b1OP3feXSFfQfPUW/N9oyXYGCYDvQQGbsXseVIfcWSn3/NF/oLGJcKJOrt+d5onEU2yI+
      TwRHUZSJ0xRPGsaNJBoHwzDw5is34K6NdnFuPtvApXPnpzqO53m7Qtd77agzE2gMKMzlclkM
      zgZ2xvQkmYhJOsV+EjYA9hzlc9KgqipyuRy63e6IUDJ/ktYyUVNVvHr+En73xX3opTwUVcWS
      lRUmD0fVpoENs2QYhrHnjnp67vghg9EZwzCwtbUluh1z7i17aXLeAO3dbrebOn2Rx5RXMppP
      9DlOy+pPMIImR8FYB53m7MdxDE1R8O61V4f1v90u5qXBhnvx/9P8qb3u6UwBxoAKwD6WnIpI
      OkOpVEK324XruiPU6vz25HoqTDLMyflZ7K15Gmz+wwKH+HGVZ4tJcrH2IiByWiQxTUBhpgB7
      oNVqCaqD3ESXNjs7FfB3TdNEUo27A7CTSeYgv9O22qchreqOPH9yf3gv2e1BNnGoAMDQmd1r
      Go8cGp3WpJwpwBjINjyno4wr6C4Wi+j1ejuTZ7Zn6+ZyuZHPcDLKWRB+YHhvdF0faR7MjC4X
      Dt4f5l9kn6nVaiGKorFx/yRM08T8dph12qz8TAHGgPamLPiTBDcIAjEitN/vpybPTtPo1WnB
      7hrJ3Ee73Yau62JV504hKwAbbAVBML1A7zOQMFOAMWCSi4kVObmSzO5ybFC73RYVYKVSSbx+
      GghuB4VlWaJyi0JeLBZT280kI2a2bSOfzx9pdnymACkIw1AUyciMz7SdgCYSawNqtRqWlpZG
      ViK28jsNWd79ggnFtbU1MUthnPDTP6CvlByScRSYKUAK5Di/XJBNJBWAaLVaKJVKYsuXdw0O
      0zhroI907tw54Qt0Oh1R3miappg7zGQip9VkMpkj95lmMbgxGNeXJmmrEr1eD71eTzh4ssLY
      tn0mhZ+QK+P4/3a7DcdxxGyFbDYrdl7LGhbTvIjM+GwHGIPBYIBsNpvKWU+26gOGafiVlRW4
      rot6vS58ANqxZz3eb9s2XNcVDu3y8rIIHCSTZSw/fRH3bKYAE8ChbmQZ8oF4nidsW2Z8+RCz
      2Sxs2x4Z53OS63sPCyw97Xa76HSGw8gHg4EYwkfFKBQKouD9RUTMZgowBplMBhsbG4LVSDuV
      A/Io8Py7HKZjUgzATPglMJhgWRYsyxKLA81Nkgr3SngdJmYKkALP86DrOvL5vKA+mKYJ27Z3
      bcvMBg8Gg5G/a5qGSqVy5uL+k2BZlrDxAYzMAzYMQzBrXyRmCpBAHMdie5ZDmWm8HkKuVqIT
      nM1mT2xbw6OCnAmXx0S9zBromQIkEIYhgiAQTrCMvVpwFAqF5+5Xf5oxjp//MnfJsx2aSAGL
      4ZkFTmKSEiSnvcxw/DFTAAlhGIril3Gckmma2s5wcjBTgATI6BzXwYEKkOT4yMSuGU4OZj6A
      BJmuO4lVyEoxZizZ12YW8Tl5mCmABK7ujuNgbm5u4vtmK/7pwMwEksAQ5qTubNO2OJnhZGC2
      AyQwqZOYoiioVqvD4u1ZhvdUYLYDSAjDELlcbmL3AQr/WSe3nRbMnuI2OJVwUrtzZolnYdDT
      g5kCSGBT3HHg8LaZ+XN6MFOAbbAcz/d9eJ6XmtXdT6u/GU4GZk7wNuI4HhmOkVzls9nsma7q
      Oq2YKcA2BoOBEH7LskYUwLbtU9W4doYdzEwgDOkPruuKTHAywpNWGD/D6cBMAbA9iWS7hjet
      GH4wGKBWq+3qCD3DycdMAQDRqiOKIjiOkzrP9yQPrpthPGY+AHbi+2yAmzSBOEVyFv48fZjt
      ANjh9QwGg11t+Njp4TQNr5hhBzMFwE5RNtv2yaYOi7VnOJ2YKcA2DMNAJpPB06dPR8YhlUql
      2ep/ijF7sthpcGtZFgqFwtTDquk7sIrsLDa/PemYKcA2NE1DFEXIZrNotVrCETZNE5VKJfUz
      bOQaRRFs236RlzvDIWGmANsg0a3b7aJcLosJg5M6PXAS4ixEenIx8wG2QUeY2WBOe3EcZ88M
      8Ez4Ty5mCrANCj27ubEoxvd99Hq9F06DmNEuXgxmCiBBURSUy2XkcjnRIS4MQzSbTTQaDTHg
      4UUJJ6NRMxwdZj6ABJoyLHrp9/ui1eGkWuGjupZZb9Gjh9Lv9+NZ+C4d8pijaUOjM5wszHaA
      CWB+YIbTi5kPMMOZxkwBZjjTmCnADGcaMwWY4UxjpgAznGnMFGCGMw19lm2c4Szj/wfRDkob
      Pk6jqQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='death history attack type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='death history sheet year and country' width='192'>
      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
      UogDIMZjjf8DtPLRKUZb2N0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='deaths-country' width='192'>
      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
      bwIi+DYfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='deaths-weapon' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='deaths-weapon-history' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='deaths-year' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='perpetrators-analysis' width='192'>
      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
      9JmZECgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='story' width='192'>
      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
      SfP/A2X9bRnXDYklAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='targets-country' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
