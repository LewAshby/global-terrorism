<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ft_attack+ (global_terrorism_dw)' inline='true' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0dw567m04ipt6i167msw31e9gc0i'>
            <connection class='mysql' dbname='global_terrorism_dw' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ft_attack].[id_attack_type]' />
              <expression op='[dt_attack_type].[sur_key_at]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[ft_attack].[id_weapon_type]' />
                <expression op='[dt_weapon_type].[sur_key_wt]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[ft_attack].[id_target_type]' />
                  <expression op='[dt_target_type].[sur_key_tt]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[ft_attack].[id_location]' />
                    <expression op='[dt_location].[sur_key_l]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ft_attack].[id_group_name]' />
                      <expression op='[dt_group_name].[sur_key_gn]' />
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[ft_attack].[id_amount_damage]' />
                        <expression op='[dt_damage_amount].[sur_key_da]' />
                      </expression>
                    </clause>
                    <relation join='inner' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[ft_attack].[id_date]' />
                          <expression op='[dt_date].[id]' />
                        </expression>
                      </clause>
                      <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='ft_attack' table='[ft_attack]' type='table' />
                      <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_date' table='[dt_date]' type='table' />
                    </relation>
                    <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_damage_amount' table='[dt_damage_amount]' type='table' />
                  </relation>
                  <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_group_name' table='[dt_group_name]' type='table' />
                </relation>
                <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_location' table='[dt_location]' type='table' />
              </relation>
              <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_target_type' table='[dt_target_type]' type='table' />
            </relation>
            <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_weapon_type' table='[dt_weapon_type]' type='table' />
          </relation>
          <relation connection='mysql.0dw567m04ipt6i167msw31e9gc0i' name='dt_attack_type' table='[dt_attack_type]' type='table' />
        </relation>
        <cols>
          <map key='[amount_range]' value='[dt_damage_amount].[amount_range]' />
          <map key='[attack_type]' value='[dt_attack_type].[attack_type]' />
          <map key='[city]' value='[dt_location].[city]' />
          <map key='[country]' value='[dt_location].[country]' />
          <map key='[date_string]' value='[dt_date].[date_string]' />
          <map key='[day_abbreviation]' value='[dt_date].[day_abbreviation]' />
          <map key='[day_in_month]' value='[dt_date].[day_in_month]' />
          <map key='[day_in_year]' value='[dt_date].[day_in_year]' />
          <map key='[day_name]' value='[dt_date].[day_name]' />
          <map key='[day_of_week]' value='[dt_date].[day_of_week]' />
          <map key='[end_date (dt_attack_type)]' value='[dt_attack_type].[end_date]' />
          <map key='[end_date (dt_damage_amount)]' value='[dt_damage_amount].[end_date]' />
          <map key='[end_date (dt_group_name)]' value='[dt_group_name].[end_date]' />
          <map key='[end_date (dt_location)]' value='[dt_location].[end_date]' />
          <map key='[end_date (dt_target_type)]' value='[dt_target_type].[end_date]' />
          <map key='[end_date (dt_weapon_type)]' value='[dt_weapon_type].[end_date]' />
          <map key='[end_date]' value='[dt_date].[end_date]' />
          <map key='[full_date]' value='[dt_date].[full_date]' />
          <map key='[group_name]' value='[dt_group_name].[group_name]' />
          <map key='[id]' value='[dt_date].[id]' />
          <map key='[id_amount_damage]' value='[ft_attack].[id_amount_damage]' />
          <map key='[id_at]' value='[dt_attack_type].[id_at]' />
          <map key='[id_attack_type]' value='[ft_attack].[id_attack_type]' />
          <map key='[id_city]' value='[dt_location].[id_city]' />
          <map key='[id_country]' value='[dt_location].[id_country]' />
          <map key='[id_da]' value='[dt_damage_amount].[id_da]' />
          <map key='[id_date]' value='[ft_attack].[id_date]' />
          <map key='[id_fact]' value='[ft_attack].[id_fact]' />
          <map key='[id_gn]' value='[dt_group_name].[id_gn]' />
          <map key='[id_group_name]' value='[ft_attack].[id_group_name]' />
          <map key='[id_location]' value='[ft_attack].[id_location]' />
          <map key='[id_prov_state]' value='[dt_location].[id_prov_state]' />
          <map key='[id_region]' value='[dt_location].[id_region]' />
          <map key='[id_target_type]' value='[ft_attack].[id_target_type]' />
          <map key='[id_tt]' value='[dt_target_type].[id_tt]' />
          <map key='[id_weapon_type]' value='[ft_attack].[id_weapon_type]' />
          <map key='[id_wt]' value='[dt_weapon_type].[id_wt]' />
          <map key='[is_weekend]' value='[dt_date].[is_weekend]' />
          <map key='[last_update]' value='[dt_attack_type].[last_update]' />
          <map key='[latitude]' value='[dt_location].[latitude]' />
          <map key='[location]' value='[dt_location].[location]' />
          <map key='[longitude]' value='[dt_location].[longitude]' />
          <map key='[month]' value='[dt_date].[month]' />
          <map key='[month_abbreviation]' value='[dt_date].[month_abbreviation]' />
          <map key='[month_name]' value='[dt_date].[month_name]' />
          <map key='[n_deaths]' value='[ft_attack].[n_deaths]' />
          <map key='[n_injured]' value='[ft_attack].[n_injured]' />
          <map key='[n_perpetrators]' value='[ft_attack].[n_perpetrators]' />
          <map key='[n_perpetrators_custody]' value='[ft_attack].[n_perpetrators_custody]' />
          <map key='[n_perpetrators_death]' value='[ft_attack].[n_perpetrators_death]' />
          <map key='[n_success]' value='[ft_attack].[n_success]' />
          <map key='[prov_state]' value='[dt_location].[prov_state]' />
          <map key='[quarter_name]' value='[dt_date].[quarter_name]' />
          <map key='[quarter_number]' value='[dt_date].[quarter_number]' />
          <map key='[region]' value='[dt_location].[region]' />
          <map key='[start_date (dt_attack_type)]' value='[dt_attack_type].[start_date]' />
          <map key='[start_date (dt_damage_amount)]' value='[dt_damage_amount].[start_date]' />
          <map key='[start_date (dt_group_name)]' value='[dt_group_name].[start_date]' />
          <map key='[start_date (dt_location)]' value='[dt_location].[start_date]' />
          <map key='[start_date (dt_target_type)]' value='[dt_target_type].[start_date]' />
          <map key='[start_date (dt_weapon_type)]' value='[dt_weapon_type].[start_date]' />
          <map key='[start_date]' value='[dt_date].[start_date]' />
          <map key='[sur_key_at]' value='[dt_attack_type].[sur_key_at]' />
          <map key='[sur_key_da]' value='[dt_damage_amount].[sur_key_da]' />
          <map key='[sur_key_gn]' value='[dt_group_name].[sur_key_gn]' />
          <map key='[sur_key_l]' value='[dt_location].[sur_key_l]' />
          <map key='[sur_key_tt]' value='[dt_target_type].[sur_key_tt]' />
          <map key='[sur_key_wt]' value='[dt_weapon_type].[sur_key_wt]' />
          <map key='[target_subtype]' value='[dt_target_type].[target_subtype]' />
          <map key='[target_type]' value='[dt_target_type].[target_type]' />
          <map key='[version (dt_attack_type)]' value='[dt_attack_type].[version]' />
          <map key='[version (dt_damage_amount)]' value='[dt_damage_amount].[version]' />
          <map key='[version (dt_group_name)]' value='[dt_group_name].[version]' />
          <map key='[version (dt_location)]' value='[dt_location].[version]' />
          <map key='[version (dt_target_type)]' value='[dt_target_type].[version]' />
          <map key='[version (dt_weapon_type)]' value='[dt_weapon_type].[version]' />
          <map key='[version]' value='[dt_date].[version]' />
          <map key='[weapon_subtype]' value='[dt_weapon_type].[weapon_subtype]' />
          <map key='[weapon_type]' value='[dt_weapon_type].[weapon_type]' />
          <map key='[week_in_month]' value='[dt_date].[week_in_month]' />
          <map key='[week_in_year]' value='[dt_date].[week_in_year]' />
          <map key='[year]' value='[dt_date].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id_fact</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_fact]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_fact</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_date</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_date]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_weapon_type</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_weapon_type]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_weapon_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_location</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_location]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_location</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_group_name</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_group_name]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_group_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_target_type</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_target_type]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_target_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_attack_type</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_attack_type]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_attack_type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_amount_damage</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_amount_damage]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>id_amount_damage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_deaths]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_perpetrators</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_perpetrators]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_perpetrators</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_perpetrators_death</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_perpetrators_death]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_perpetrators_death</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_perpetrators_custody</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_perpetrators_custody]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_perpetrators_custody</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_injured</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_injured]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_injured</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n_success</remote-name>
            <remote-type>3</remote-type>
            <local-name>[n_success]</local-name>
            <parent-name>[ft_attack]</parent-name>
            <remote-alias>n_success</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[full_date]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>full_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_string</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_string]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>date_string</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_of_week</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_of_week]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_of_week</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_in_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_in_month]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_in_month</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_in_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[day_in_year]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_in_year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_name]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_abbreviation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_abbreviation]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>day_abbreviation</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_in_month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[week_in_month]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>week_in_month</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>week_in_year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[week_in_year]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>week_in_year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>3</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>15</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_abbreviation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_abbreviation]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>month_abbreviation</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter_number</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter_number]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>quarter_number</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[quarter_name]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>quarter_name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>33</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>34</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version]</local-name>
            <parent-name>[dt_date]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_da</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_da]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>sur_key_da</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_da</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_da]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>id_da</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>amount_range</remote-name>
            <remote-type>130</remote-type>
            <local-name>[amount_range]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>amount_range</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_damage_amount)]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>40</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_damage_amount)]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>41</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_damage_amount)]</local-name>
            <parent-name>[dt_damage_amount]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_gn</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_gn]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>sur_key_gn</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_gn</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_gn]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>id_gn</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_group_name)]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>47</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_group_name)]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>48</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_group_name)]</local-name>
            <parent-name>[dt_group_name]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_l</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_l]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>sur_key_l</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_region</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_region]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_region</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_country</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_country]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_country</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_prov_state</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_prov_state]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_prov_state</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prov_state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[prov_state]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>prov_state</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_city</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_city]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>id_city</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4194303</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_location)]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>63</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_location)]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>64</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_location)]</local-name>
            <parent-name>[dt_location]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_tt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_tt]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>sur_key_tt</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_tt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_tt]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>id_tt</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[target_type]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>target_type</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_subtype</remote-name>
            <remote-type>130</remote-type>
            <local-name>[target_subtype]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>target_subtype</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_target_type)]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>71</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_target_type)]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>72</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_target_type)]</local-name>
            <parent-name>[dt_target_type]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_wt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_wt]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>sur_key_wt</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_wt</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_wt]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>id_wt</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weapon_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weapon_type]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>weapon_type</remote-alias>
            <ordinal>77</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weapon_subtype</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weapon_subtype]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>weapon_subtype</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_weapon_type)]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>79</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_weapon_type)]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>80</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_weapon_type)]</local-name>
            <parent-name>[dt_weapon_type]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sur_key_at</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sur_key_at]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>sur_key_at</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_at</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id_at]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>id_at</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attack_type]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>attack_type</remote-alias>
            <ordinal>85</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[last_update]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>86</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date (dt_attack_type)]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>87</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date (dt_attack_type)]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>88</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>version</remote-name>
            <remote-type>3</remote-type>
            <local-name>[version (dt_attack_type)]</local-name>
            <parent-name>[dt_attack_type]</parent-name>
            <remote-alias>version</remote-alias>
            <ordinal>89</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Amount Range' datatype='string' name='[amount_range]' role='dimension' type='nominal' />
      <column caption='Attack Type' datatype='string' name='[attack_type]' role='dimension' type='nominal' />
      <column aggregation='None' caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
          <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
          <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
          <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
        </semantic-values>
      </column>
      <column caption='Date String' datatype='string' name='[date_string]' role='dimension' type='nominal' />
      <column caption='Day Abbreviation' datatype='string' name='[day_abbreviation]' role='dimension' type='nominal' />
      <column caption='Day In Month' datatype='integer' name='[day_in_month]' role='dimension' type='quantitative' />
      <column caption='Day In Year' datatype='integer' name='[day_in_year]' role='dimension' type='quantitative' />
      <column caption='Day Name' datatype='string' name='[day_name]' role='dimension' type='nominal' />
      <column caption='Day Of Week' datatype='integer' name='[day_of_week]' role='dimension' type='quantitative' />
      <column caption='End Date (Dt Damage Amount)' datatype='date' name='[end_date (dt_damage_amount)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Group Name)' datatype='date' name='[end_date (dt_group_name)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Location)' datatype='date' name='[end_date (dt_location)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Target Type)' datatype='date' name='[end_date (dt_target_type)]' role='dimension' type='ordinal' />
      <column caption='End Date (Dt Weapon Type)' datatype='date' name='[end_date (dt_weapon_type)]' role='dimension' type='ordinal' />
      <column caption='End Date' datatype='date' name='[end_date]' role='dimension' type='ordinal' />
      <column caption='Full Date' datatype='date' name='[full_date]' role='dimension' type='ordinal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Amount Damage' datatype='integer' name='[id_amount_damage]' role='dimension' type='ordinal' />
      <column caption='Id At' datatype='integer' name='[id_at]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Attack Type' datatype='integer' name='[id_attack_type]' role='dimension' type='ordinal' />
      <column caption='Id City' datatype='integer' name='[id_city]' role='dimension' type='ordinal' />
      <column caption='Id Country' datatype='integer' name='[id_country]' role='dimension' type='ordinal' />
      <column caption='Id Da' datatype='integer' name='[id_da]' role='dimension' type='ordinal' />
      <column caption='Id Date' datatype='integer' name='[id_date]' role='dimension' type='ordinal' />
      <column caption='Id Fact' datatype='integer' name='[id_fact]' role='dimension' type='ordinal' />
      <column caption='Id Gn' datatype='integer' name='[id_gn]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Group Name' datatype='integer' name='[id_group_name]' role='dimension' type='ordinal' />
      <column caption='Id Location' datatype='integer' name='[id_location]' role='dimension' type='ordinal' />
      <column caption='Id Prov State' datatype='integer' name='[id_prov_state]' role='dimension' type='ordinal' />
      <column caption='Id Region' datatype='integer' name='[id_region]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Target Type' datatype='integer' name='[id_target_type]' role='dimension' type='ordinal' />
      <column caption='Id Tt' datatype='integer' name='[id_tt]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Id Weapon Type' datatype='integer' name='[id_weapon_type]' role='dimension' type='ordinal' />
      <column caption='Id Wt' datatype='integer' name='[id_wt]' role='dimension' type='ordinal' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='date' name='[last_update]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Month Abbreviation' datatype='string' name='[month_abbreviation]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
      <column caption='Injured' datatype='integer' name='[n_injured]' role='measure' type='quantitative' />
      <column caption='N Perpetrators' datatype='integer' name='[n_perpetrators]' role='measure' type='quantitative' />
      <column caption='N Perpetrators Custody' datatype='integer' name='[n_perpetrators_custody]' role='measure' type='quantitative' />
      <column caption='N Perpetrators Death' datatype='integer' name='[n_perpetrators_death]' role='measure' type='quantitative' />
      <column caption='Successful attacks' datatype='integer' name='[n_success]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Prov State' datatype='string' name='[prov_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Quarter Name' datatype='string' name='[quarter_name]' role='dimension' type='nominal' />
      <column caption='Quarter Number' datatype='integer' name='[quarter_number]' role='dimension' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Start Date (Dt Damage Amount)' datatype='date' name='[start_date (dt_damage_amount)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Group Name)' datatype='date' name='[start_date (dt_group_name)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Location)' datatype='date' name='[start_date (dt_location)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Target Type)' datatype='date' name='[start_date (dt_target_type)]' role='dimension' type='ordinal' />
      <column caption='Start Date (Dt Weapon Type)' datatype='date' name='[start_date (dt_weapon_type)]' role='dimension' type='ordinal' />
      <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key At' datatype='integer' name='[sur_key_at]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key Da' datatype='integer' name='[sur_key_da]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key Gn' datatype='integer' name='[sur_key_gn]' role='dimension' type='ordinal' />
      <column caption='Sur Key L' datatype='integer' name='[sur_key_l]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Sur Key Tt' datatype='integer' name='[sur_key_tt]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Sur Key Wt' datatype='integer' name='[sur_key_wt]' role='dimension' type='ordinal' />
      <column caption='Target Subtype' datatype='string' name='[target_subtype]' role='dimension' type='nominal' />
      <column caption='Target Type' datatype='string' name='[target_type]' role='dimension' type='nominal' />
      <column caption='Version (Dt Damage Amount)' datatype='integer' name='[version (dt_damage_amount)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Group Name)' datatype='integer' name='[version (dt_group_name)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Location)' datatype='integer' name='[version (dt_location)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Target Type)' datatype='integer' name='[version (dt_target_type)]' role='measure' type='quantitative' />
      <column caption='Version (Dt Weapon Type)' datatype='integer' name='[version (dt_weapon_type)]' role='measure' type='quantitative' />
      <column caption='Version' datatype='integer' name='[version]' role='measure' type='quantitative' />
      <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
      <column caption='Weapon Type' datatype='string' name='[weapon_type]' role='dimension' type='nominal' />
      <column caption='Week In Month' datatype='integer' name='[week_in_month]' role='dimension' type='quantitative' />
      <column caption='Week In Year' datatype='integer' name='[week_in_year]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
      <column-instance column='[weapon_type]' derivation='None' name='[none:weapon_type:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Weapon Subtype,Weapon Type)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:weapon_subtype:nk]' />
          <groupfilter function='level-members' level='[none:weapon_type:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Date hierarchy'>
          <field>[year]</field>
          <field>[quarter_number]</field>
          <field>[quarter_name]</field>
          <field>[month]</field>
          <field>[week_in_month]</field>
          <field>[day_in_month]</field>
          <field>[day_name]</field>
          <field>[month_name]</field>
        </drill-path>
        <drill-path name='Location hierarchy'>
          <field>[region]</field>
          <field>[country]</field>
          <field>[prov_state]</field>
          <field>[city]</field>
        </drill-path>
        <drill-path name='Target hierarchy'>
          <field>[target_type]</field>
          <field>[target_subtype]</field>
        </drill-path>
        <drill-path name='Weapon hierarchy'>
          <field>[weapon_type]</field>
          <field>[weapon_subtype]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.589286' measure-ordering='alphabetic' measure-percentage='0.410714' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:weapon_subtype:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hands, Feet, Fists&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Unknown Weapon Type&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arson/Fire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rifle/Shotgun (non-automatic)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Explosive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suicide (carried bodily by human being)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Molotov Cocktail/Petrol Bomb&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Knife or Other Sharp Object&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vehicle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gasoline or Alcohol&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Time Fuse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Projectile (rockets, mortars, RPGs, etc.)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Automatic or Semi-Automatic Rifle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rope or Other Strangling Device&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poisoning&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Unknown Explosive Type&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Other Explosive Type&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Other Gun Type&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pressure Trigger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Remote Trigger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Landmine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Handgun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Unknown Gun Type&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blunt Object&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sticky Bomb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pipe Bomb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Letter Bomb&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dynamite/TNT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suffocation&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='country-deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Attack Type' datatype='string' name='[attack_type]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[attack_type]' derivation='None' name='[none:attack_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[prov_state]' derivation='None' name='[none:prov_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='None' caption='Prov State' datatype='string' name='[prov_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]'>
            <groupfilter function='level-members' level='[none:attack_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2001' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]</column>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]</column>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='18409021.673297212' min='-15015123.981687976' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='14922434.142487925' min='-14847228.580390934' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:prov_state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:prov_state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:prov_state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F9AD7A75-7559-4F2C-A796-EC36FAF7705C}' />
    </worksheet>
    <worksheet name='country-weapon type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Weapons used by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]'>
            <groupfilter function='member' level='[none:weapon_subtype:nk]' member='&quot;Automatic or Semi-Automatic Rifle&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2001' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</column>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='22147674.207989983' min='-16095223.24970118' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='12341205.310825288' min='-6900505.1483914237' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{43F6FB4C-D7E0-4B93-8C28-C252A58D20E7}' />
    </worksheet>
    <worksheet name='deaths-country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths for countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='17620530.963873368' min='-15309527.904231487' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='12074692.818491433' min='-7185779.3893388025' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6F46F2AF-1D9C-4A42-B0DD-398C8A70BC58}' />
    </worksheet>
    <worksheet name='deaths-weapon'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths for type of weapon</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
            <column-instance column='[weapon_type]' derivation='None' name='[none:weapon_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
            <column caption='Weapon Type' datatype='string' name='[weapon_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</cols>
      </table>
      <simple-id uuid='{F95BA37C-79D0-477E-A798-15B24579548A}' />
    </worksheet>
    <worksheet name='deaths-weapon-history'>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[weapon_subtype]' derivation='None' name='[none:weapon_subtype:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Weapon Subtype' datatype='string' name='[weapon_subtype]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{002F23DA-E233-4CBB-85AC-B7ABE9D6AA03}' />
    </worksheet>
    <worksheet name='deaths-year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column caption='Injured' datatype='integer' name='[n_injured]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_injured]' derivation='Sum' name='[sum:n_injured:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' scope='rows' value='Deaths' />
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_injured:qk]' scope='rows' value='Injured' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_injured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk] + [federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_injured:qk])</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{C63E48AE-64E3-4B9E-919E-34657EA50448}' />
    </worksheet>
    <worksheet name='perpetrators-analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Perpetrators</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column caption='N Perpetrators' datatype='integer' name='[n_perpetrators]' role='measure' type='quantitative' />
            <column caption='N Perpetrators Custody' datatype='integer' name='[n_perpetrators_custody]' role='measure' type='quantitative' />
            <column caption='N Perpetrators Death' datatype='integer' name='[n_perpetrators_death]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_perpetrators]' derivation='Sum' name='[sum:n_perpetrators:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_perpetrators_custody]' derivation='Sum' name='[sum:n_perpetrators_custody:qk]' pivot='key' type='quantitative' />
            <column-instance column='[n_perpetrators_death]' derivation='Sum' name='[sum:n_perpetrators_death:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators:qk]' scope='rows' value='Perpetrators' />
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_custody:qk]' scope='rows' value='Perpetrators in custody' />
            <format attr='title' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_death:qk]' scope='rows' value='Perpetrators Deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_custody:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators:qk] + ([federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_custody:qk] + [federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_perpetrators_death:qk]))</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{CCAC23D0-B572-4CF6-BD99-A082974B5ECA}' />
    </worksheet>
    <worksheet name='targets-country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Targets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;People&apos;s Republic of the Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Rhodesia&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;Serbia-Montenegro&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;Soviet Union&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;West Bank and Gaza Strip&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;West Germany (FRG)&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Slovenia&quot;' />
              </semantic-values>
            </column>
            <column caption='Deaths' datatype='integer' name='[n_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[target_type]' derivation='None' name='[none:target_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[n_deaths]' derivation='Sum' name='[sum:n_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Target Type' datatype='string' name='[target_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]'>
            <groupfilter function='member' level='[none:target_type:nk]' member='&quot;Government (Diplomatic)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='17679341.565181043' min='-18291122.965052903' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='13761431.415902074' min='-7277344.5900026029' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]' />
              <color column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' />
              <geometry column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]</rows>
        <cols>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7CF3849F-AB2D-4846-9749-27C7B41ABE68}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='death history attack type'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
      </datasources>
      <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
        <column caption='Attack Type' datatype='string' name='[attack_type]' role='dimension' type='nominal' />
        <column-instance column='[attack_type]' derivation='None' name='[none:attack_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82300' x='800' y='1000'>
              <zone h='98000' id='1' name='country-deaths' w='82300' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='161' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16100' x='83100' y='1000'>
              <zone h='33250' id='6' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' w='16100' x='83100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4000' id='7' mode='slider' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' show-title='false' type='filter' values='cascading' w='16600' x='65700' y='80750' />
        <zone h='2750' id='8' name='country-deaths' pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' w='15500' x='83600' y='38625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='33250' id='6' mode='checkdropdown' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' w='16100' x='83100' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4000' id='7' mode='slider' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' show-title='false' type='filter' values='cascading' w='16600' x='65700' y='80750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='1' is-fixed='true' name='country-deaths' w='82300' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='8' name='country-deaths' pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' w='15500' x='83600' y='38625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{13A3EB13-2F80-437A-907D-0849B1E70985}' />
    </dashboard>
    <dashboard name='death history type of attack'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='ft_attack+ (global_terrorism_dw)' name='federated.1fkwmap04lu8pu1fj435e0rgby5t' />
      </datasources>
      <datasource-dependencies datasource='federated.1fkwmap04lu8pu1fj435e0rgby5t'>
        <column caption='Attack Type' datatype='string' name='[attack_type]' role='dimension' type='nominal' />
        <column-instance column='[attack_type]' derivation='None' name='[none:attack_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='country-deaths' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='78625' id='6' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' w='16000' x='83200' y='20375'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='19375' id='8' name='country-deaths' pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' w='16000' x='83200' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3250' id='7' mode='slider' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' show-title='false' type='filter' values='cascading' w='16800' x='65700' y='7875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='78625' id='6' mode='checkdropdown' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' w='16000' x='83200' y='20375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3250' id='7' mode='slider' name='country-deaths' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' show-title='false' type='filter' values='cascading' w='16800' x='65700' y='7875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='1' is-fixed='true' name='country-deaths' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19375' id='8' name='country-deaths' pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D55EEB7B-47CB-4EDB-B37E-0020A1A9C99B}' />
    </dashboard>
    <dashboard name='story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global terrorism history analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='17' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='16' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='18' type='title' w='98426' x='787' y='830' />
            <zone h='6535' id='19' paired-zone-id='20' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='87448' id='20' paired-zone-id='19' removable='false' type='flipboard' w='98426' x='787' y='11722'>
              <flipboard active-id='8' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='deaths-year' id='1' />
                  <story-point captured-sheet='deaths-country' id='2' />
                  <story-point captured-sheet='country-deaths' id='3'>
                    <capturedDeltas>
                      <worksheet name='country-deaths'>
                        <filter class='categorical' column='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]'>
                          <groupfilter function='member' level='[none:year:ok]' member='1998' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='targets-country' id='6' />
                  <story-point captured-sheet='deaths-weapon' id='4' />
                  <story-point captured-sheet='deaths-weapon-history' id='5' />
                  <story-point captured-sheet='country-weapon type' id='7'>
                    <capturedDeltas>
                      <worksheet name='country-weapon type'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Latitude (generated)]' field-type='quantitative' max='19746742.350003' min='-23766163.058631849' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[Longitude (generated)]' field-type='quantitative' max='23388696.315066218' min='-19966172.720267784' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='perpetrators-analysis' id='8' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{44EB2660-DA91-4D60-9396-C47DED8F06D5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='deaths-year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EDE87896-C779-4066-84AC-395F162B6748}' />
    </window>
    <window class='worksheet' name='deaths-country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:group_name:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9EF9313E-7AEA-4693-99B2-1E0FFD1BA897}' />
    </window>
    <window class='worksheet' name='country-deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]' type='filter' />
            <card mode='slider' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:attack_type:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:region:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3D01D8EA-3DA6-4B38-AE3B-5008BFEE110C}' />
    </window>
    <window class='worksheet' name='deaths-weapon'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_gn:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D3C9430-CE20-45EE-B04F-CB518BCB14B0}' />
    </window>
    <window class='worksheet' name='deaths-weapon-history'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_gn:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{471D2636-9CAF-4E74-9C3B-A5598900EF26}' />
    </window>
    <window class='worksheet' name='country-weapon type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:ok]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_fact:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_weapon_type:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:id_wt:ok]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_subtype:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:weapon_type:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8B8D949F-C59B-47BB-BC7E-BC5628018B1D}' />
    </window>
    <window class='worksheet' name='targets-country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1fkwmap04lu8pu1fj435e0rgby5t].[sum:n_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:country:nk]</field>
            <field>[federated.1fkwmap04lu8pu1fj435e0rgby5t].[none:target_type:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{52326D0C-A221-4D22-AC5F-77A42C6FA0A9}' />
    </window>
    <window class='worksheet' name='perpetrators-analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{71508E83-616C-4DC7-9236-F1BD5E2BF219}' />
    </window>
    <window class='dashboard' name='death history type of attack'>
      <viewpoints>
        <viewpoint name='country-deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{F7D22BD3-B4E7-42E7-90D4-BD52FD4A3A26}' />
    </window>
    <window class='dashboard' maximized='true' name='death history attack type'>
      <viewpoints>
        <viewpoint name='country-deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <simple-id uuid='{A55BE912-5DF7-4716-8291-6709EF7E457E}' />
    </window>
    <window class='dashboard' name='story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{333BC734-8EDF-450F-A460-F86604BDC401}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='country-deaths' width='192'>
      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
      MKn0NCFJEplsdlvH7R8bBwimP4opl6qq1ugghTyHOrPEtQidifrOxRFFoS+dxF3NI5tF+tNJ
      rsmgaxEORzV838FPRblchKFMCsfzmDJdBs98lXiT5GNbAXYRjuMExRrN8GDiHouXP0fxPHTf
      JxZanRYUidlzL/HG/mGuTs+iqSqnxmrbd0zT0LUItuPw3aEu9ID1qLNYKHH5yy85c/Zskyu2
      FoIGWrFYUF6ZSqXITU8Sj2/M5PR9n5V8geO9tYow2/NQQtQSH3B9D8t1mYllGX/91IZJx7YC
      7CJ+86tf0dPXyyuvvLpuhTdNk8rNK5w7dgCOHWB6Jccnn1/hyI37pHxI+nC0t5vBjiyDHetX
      1n1dHU2vma9W0adu8+PrVzhy6BDx/kH2je7f8wRaMwiKBNQc6mq1imWapK0qxDcuhsqVK8zl
      8kj4uD5YDf6/BBQtm8K+IxzaN9r0HAJtBdhFfPd73wsGXjfCtm1mlpYZS8VYLVcoVQ2+97Wz
      fB6PszI5i2Wa9G4wcWYzHOzrwbQdRrt9ol6VqcsX+f3t24zsGyXd2UksFmsZHpIodikUCti2
      XQvp5lc4lNn8/u4sLFN2XMaGBolHNQqVKl9Oz9GbStCXTlGwbAZOvkr/yL4t76GtALuIjSgP
      UHP4Sr7M/aUVJM/jUF8XsiRx6sxJ7NeO818//JRjHZmmn90K0dDUm950kpRloM3coTJxjaIv
      4Q+OMnby5WBXEEmrp71LKIoSTGoRky8L+RyStvl9KBIMqBBRZPB9MvEYL48Oc2t2Hj9fpJTp
      5vjp7ZmAbQXYIyxOP2BMl6kYBscH+4LX5/JFlspV3njlGNkm/JdHhR6JoK9RCxJrZYJmbo4b
      762idnRx8ORLe0qriEaj2KUSd//wOzKpBMd6OoDNyxk7kklIJYM+TSKKdLC/ly+n50gc6N3s
      43VoJ8L2CNnePpRkuk74Pd9nvlDipX1DDHZkNy3sfhJEVZUDqos2c49iobAr13gUZLp7KL3/
      CaWfvcO7/98vsF0X03ZYKpaaHt+bTq5rWiygKCqp1Pba00BbAfYMyWSS4a++zXQoM1q1bOL6
      06M2JNTa8Om9xuDwECPHj3PE9TlWqPDpxcu89+5HTPyXn/Hh+xfXHS9JEgv5IuYa2S6MkWyK
      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
    </thumbnail>
    <thumbnail height='192' name='country-weapon type' width='192'>
      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
      Pk6jqQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='death history attack type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='death history type of attack' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V5Ak6XXv98vMyvK+utp7O97srJv12F3uwpOgAy4YVxTFG4p7Q6ErvUih
      R+hVL7oSRVERZBBk8NKDILggCOzCrLfj/fRMe99d3puszNRDdWZndVf3dI9fYP4RHV2VlebL
      zHO+7/gj6Lqu8wiP8CsK8UEP4BEe4UHiEQM8wq80HjHAI/xK4xEDPMKvNB4xwCP8SqOBAXKp
      GGfOnGFqbmlPJ1maukm+dlfH9QiPcF/QwAA3zr5LeOgETjXLj3/x0S0P/tG//QiA5elHDPAI
      n0/Ymm3sHNjH6YtvoBTivPnuWQIOlejIE3jVFMuJNCuxLE8fHWFmeppL1yYAlcsXznFp9Sb9
      T32ZyVM/JdLeTVfvMJ2toft8S4/wCLvHjjrA1MVTaK4Q7mCY5bkZEokEILCyukK0s5f+gQEO
      7x8GJA4dPc4Th4dYS+QJ+HzUFBWH03F/7uIRHuE20ZQB1uYncAVbae8dQBIlDh84yNjIAFPz
      SxzeNwzrzmO1plJT1S3Ht/cO8cSJw3z4/gf3dvSP8Ah3CMEaCpFLxbgxNUco2sFgbycA8eV5
      FhMFDh0Yo5iOMRfL0dYSpCUSIR1bZjWr0Bn24AhEECs5CpoDoZJmcm6Vg4cPYpceGZoe4eGF
      8CgW6BF+lfFoen6EX2k8YoBH+JVGgxm0XC4jCMJdO7mu69RqdQeBLMtbflcUpeF6uq4jCAKG
      VLZ5LJIkbdm/Vqvd1THvFaIoIop3fx7RNA1N0+7b9R4Usotz2NFRnB7EYh5ZFKiForjd7vty
      /QYGEAQBh+P2TJeaplGtVrHb7Q0vKJ1Om0Tq8XjI5XJ4PB5EUaRcLpu/6bqOKIqoFqvS5hct
      iiLBYBCoM0+hUKBWqz1QgvB6vdjt9rt+3nK5TKVSATYmBkEQsNls+Hy+u369BwXB6yddLFL6
      6G1CK1M4JZGZUBeHv/UH9+X6TR1ht4NSqYSqqoiiaBKEoijmbF4ul3G73dRqNXK5HIFAALfb
      TTabRdd1ZFlG1/Wms54Bp9NpXqtYLJqE8SBxr5hPlmUkScLpdFKtVlEUBb/fb04aNttde3UP
      FC2tbUR0nas/+nv8NomiqjGdyTH31i/oCDhI5Gr0dYWIx+N0DR7h088+4ne/8fW7dv278hR1
      XcfpdKIoSoOoI8sywWAQXdfJZrOoqorb7aZQKJi/BwIBoC7eKIpCtVqlWq1uuYYx+xnXM2bE
      Bw1Jku7JeUVRxOv1UiqVqFQq2Gw2JElClmVyuRyh0C+Ph33m5g0EX4C5Q08QaG3nSCnLxRtz
      pHM2xlojzCvw7HNPcPlSkpGBnrt67TuevlRVpVQqkUqlmuoQgiCgqio+n89cHbxeL4qioGka
      NpvNJOxSqWSuHlbrrNPpJBQKmfs5nc6mOsWDQDqdbsqwdwqDwTVNa2B+Q1wsl8t3/ZoPCp19
      /Qx/6w8Ze+xx7E6J06cvMDQ8SneHn7lihaGgi48+PE9Lp5fFxcU9B2vuhAY/QKVS2bUOoOu6
      ub8gCORyOWRZNsUUXdepVqtNz6coCrVaDbvdjiAIVCoVXC4XyWTSfOnWWd7pdDZViqw6hCEv
      PwgEAoF7thKkUil0XcftduN0Ok1dyxCRHkZomkY2kyG4x1VqZW4G5Yd/TVEXKTz9axw+evSe
      T3S3tQJYZ3wDPp/PJH6oz1TbvSCbzYbL5TKtOna73SRkVVUbZn+bzdaU+K3i0oMkfoB8Pr+j
      7nInMO7dIARRFHE6nQ+M+BVFueU+oihuIf5zp0+Zoi/UJ8hLZ8+a38vlMrmf/BMtEkwq9d9T
      yeTdG/h2Y93rAaqqmgqo8dKtlhvrZ6uiZiXqVCpFOp1GVVUEQaBWq5HJZExLkFWMUlW14cEZ
      MFaKBw23231PZymHw2FOFg8SilLl8t/+OVf+5P+gWNz6Pm6Fw8eO4/F4zO+5bJZCpUJynciX
      pqdor5UAeMah4v/0LZKxNSYuXWD84gXTnH63sSclWNM0CoUCuq43iC9WuT2TyRAKhRAEAUVR
      UFUVWZbJZDKIokggEMDlclEqlchms/VB2Gw4HA5qtRqqquJwOBBFEU3TUBSlqRhls9nwer3m
      OR4EDLPxvVbGrSvr/YSu6+i6TiGf58ZPf8RQcpFlyYbdvndT+WarlapptLZGcTgcXD/9KdXZ
      SdrXH6NDFMipEoGP3qJDLaHocCYRZ/+Jx/H7A3fj1jbGtZedK5UKtVoNp9OJx+OhUqmQz+eR
      JAmv14vNZkMURdMaJIoiuVzOnK01TaNWq+FyubDb7WiaRi6XM0UioMG0aegC281+oiiazGF8
      1nWdYrG4q6X6TqHrOqlUymT4e4UHYe0qlUq8+V//gpFqBg8a+0WNJcmB94Uv3dIEa+gp2zHu
      hTNnWD73KUura/QfPop68wrPbpJy98sqaCoIAnYByp+9S7y7544YIJlIMPPphww98wILc7Mc
      PHJ070qwMStsNllKkkQgEKBQKJi6QSQSQVGUhlna7XY3yPTJZBJJkvD7/eaLrlQqpoXodsWL
      YrF43ywlPp/vobFK3Q0kYmvM/MN3GREUZFFgRpUQ9h2l7+SLuHbhoY3H4xQKBfr6+hq2Z9Jp
      lqYmmH/7xzzphLWqSlgWca9HDO/E6DcKCrXDT3LitS/f1j1dPH0K7foFxvKr/FwM8nQtTTzS
      tXc/gGGZMezRBmq1Gul0ukHWV1UVm81GJBKhWCxSKpVMD3ClUsHv95v7pdNpZFk2VwkDHo/n
      trzTbrebarV6X/QE4z4fBr/EnSKbSjL1xt9zSKpRVnVmeg+x79Uv78nbnVpbo6W9vWHb5bd/
      SmD8LN2aQr9HRNd1up0b5Lc5xGXz9k6HxJrPf7u3hVKpIGfiIMErWhpE8KQWb98RJooifr/f
      tOdXKhVUVTVDIQyCMP6M7Xa7nUKhYFp7DLu2YTbdjDshYIfDQalUuu3jdwPDj2EwwecdP//b
      v+J1IQeCwHjPQZ760q/vmbG7BwZM8SeRiPPuP/wNz6kZvJIAQiOBG9guKt/YnrE56DlwaI93
      s4ETzz7HteQKxblrpBWNFBLI9r0xwOYgNbvdjt1uN+V8j8ezrdwny7IpJng8HtNa5PF4TCYy
      nD6bj7tduFwu0+dwr1CtVnG5XL8UIlC5XMZbSFNwCZzWXDz93Et7In5VVUklk7REo0BdFPqz
      P/5/eNWt4fXeXryUpuvM2P3kxo4zeAcrAED/q1/h5kc+eh57ki6nE7vDsXszaD6fJ5lMkkwm
      KZfLDeKFz+cjEons2lohiqJJMHa7HY/Hg8/nIxAI4Pf7G/7udFa9l7Oyruu/NKIPwIWzZxhz
      wHypxtHf+jahcHhPx0uSZBL/4vw8sizz9MmT5JTGCcgqGVi3NcOE4KTlK78L5z8iGYvt8Y42
      sLS0hMvl4sgrr7Nw/Sq2dSPNnvwAhlUmn8+Ty+XI5/M7Ll3W36rVKtls1rTpG76AZDJpMlKt
      Vrvrs/W9Ik7j/iRJ+qUQfVaWlrCdeoeILJHvG6Ozq+u2z6WqKpIsM3H9Gp1OmQ5348RoPDsr
      fWymo5KqMa+KpDsG+OBvvosydhyH201sbXWLcUPXdaZv3tjR6KFbRGlNFLn5w3+kUCjsXgRq
      Rui1Wg1N07aYKXVdp1AomGKRYZpUVRVJkhrEHeOvXC5TLBZxOp1UKhXTjGkQsMfjuS1CuxcO
      JONZyLJ82+HjDxtUVQWlynUF9v36Szvuu7IwT25mgpHnvgDAtatX6evvx+12s7y4yNrf/ylB
      SWDEJiIJIDj2HnBwTnPS/6XfIHDlHIccNRwTn/GTUx/yQkBmvqax4G/lpT/4jwiCwOLCPOq/
      /g0X3AFUf5juJ5+jd2io4Xxd3d1A/d3lU0miC1NMvPXD3ZtBE4nEFqI1vhuBbkZocKFQQFEU
      M37FcHAZPgOn00k+n0cQBNxuNy6Xi0wmg6ZpeDyeBrOpVd+4nTh4w8J0txN9dF3H5/P9UjCA
      Wqtx5S//hP5Khqu9h3j6q7+x4/5vvvEDaqkEr3zz97h+9Qr9A4MIgkAplSSWyxF8+wdE7Lc/
      8aQVlYsVgQ5JZ8S1cR6rjyitCSRkF7b9x4jNzbIvtYBXqtPljSoM/rf/Iz5/c50hl82aEQi7
      mlINArYSoyiKlEolc7Y3QqKNWHVraLShMxgXNWblcDhsMpKhFG8mVL/fb8bD304c/E4ZZncK
      tUlJmM8jstkswUKKLDD05DM77puIxzk8c5GQXeLGD7/H2Fd/i09/9hZjBw8yNz9P38gYcVUn
      cgfjkQSB5z0CgtC4cljfX1DUCapFuPwRffWDzN9smsp2lR5y2SzXPngH743z6G7v7nQAq1fV
      EGusAWiGblAqlRoytIzjPB5Pgx3ZkJuNG7Ke3yr6CIJAJpOhVCqhaRr5fH43w22Ku0n8RqDf
      vcgEexCY+PRDAjaRIiLhyM6kG19ZJrg+u9sEKKRT6MU8Z86fx3H+Q9JvfR/bl77JinL7xUZ8
      NvG235eu65RVDXVdl8yk043jX1wgOH6WfofIgFrcHQMYoQ/Gizfs/NaLWnUEw/ZuJWbD++t0
      Ok0fQDMbv9Vub30Iht5QLpdvK8zhbmZuGbnI99K8ej9RmLpBRlHxCxqxtbUd99XmJkDXUTQd
      tbOP5Pe+i6RrjM1fpUfS6S2l0T/5GZ+WoKY9mIo7BbUeVBmPxbj+izfJZDLcPPUJl86cJptJ
      Y2WtXckTBgHbbDZz1vN4PCYBbBYxDN3AyhRGPq8oimZ2mJEmKcsydrudarVqHrOZqQwUi0Vg
      9+EHoigSDofNQL67IbYYDrZKpfLAAtVSqRSTExP09vVRrVTo7rn9TKmxb/w7vvfH/4X/0BNg
      5so52js6mu539aP36Zy+DKKAgE4lncRns9FayTHjjZLOxDjoEmgrpJB9QWzCgwlUPOqxkZi6
      QbVSZf/KDVJ/cZ0uu0RZXU8ucmzoFTsygFXp2Jwwb9jADXm+UqlsYQQjVshgGmMWNvarVqu4
      3W4zGf5WXl/reAqFghkqfCsYnmpZlu+4ioQRCWtYtB4E3nrzJ0zfvIlTV7n48Yd4bBI9o2M8
      /sJLtyWWdXR28uVv/zdcO/sRi+fP4h7aT09f35ZVs6jp5uwpCQKu1BrFvjH6Zy/TC+TW5yOn
      JNKdjaF47cji/feRyKKA/MFPUGUHNkEgui6yOZtUKWzKANaANyOMYcuB6xGcxj42m61pKEM2
      m8XhcOD1ercQnqFcS5KEz+dDURQzud4YB9SV7s0lVDRNM2OLbmWJqdVqlEqlu6IHiKJoRrTe
      T+9voVDgzZ/8BF3TmLwxzmtjAySLJYajERbTWRz5DCtLS/T09d3WfQ4dPAQHD3FUVclms3z8
      3T/hxO/9YcMK5w1FsNKzGIygZRLmd59tg8CO+B+sdSwii8CtReUGBjBkW6NSg5Gg4vV6gbpM
      b8TuA6bSaxxrPc/m81qrQxipfcasb+gVDocDSZLIZDLIsmzmDttsNvL5vHkt6wveTQSrwVA+
      n68hgO92YOTj3k8lWNc0fvrTt5i9eomeSIhvP36IsMdNqlBiraULV7jGZ++9Q3siwfVIK6/9
      xm/u6rzFYgG329OwTZIkQqEQwQPH+PBP/4iOzk4co4cYOnyU5NI8fhWC61SjVsqQWIOHMzNz
      V5C+853vfMf4kkgkKJfLqKpqEqchqxvijBEGbTCCEcFpla0NW79hHTKS2I1yJjabzXR4GaIJ
      1GdXw5pkBNYZiTdGnoHBTAYTGAF2O816hu5is9nuykpg+CTuRwhEoVDgX994g+L8NCPtURy+
      AO1eF16Hg/lcgbZ9h8jkcoQnL/GsXGV2doa161cppFP4u3qQtjEbFwoFZv78v5B0+mhp76BY
      LFKr1cz3mcoXcKTWGEot4poZ58zkDG0Hj1HUdPzpNQRBIBXppOoPs6xLFHM5QrbdP4+HJXxk
      i1DUTPnUdb1BLKnVamZcULFYxOFwmAzhdrtNhdbr9RIOh82Z0powDxuRntlslvS6ucoaEGfV
      KSRJasi+snpjb/UwjTTLO40MFUURt9vdVJy7V/j+977HzauXCft9BN0uOg4fY0qXOZ9XUMJt
      df1mZYHjgfqzfT7i4ZiapffGaWb+9k8bVrylxUWuX7pILputm6Efe47e4VHOfvYp7/zZH5NL
      p7j+7s85/Wd/hPzJT/HX6qEFNlHgWHqe/Bt/Ta2zn2yt/t78i5PYou1Ek8ustnSTqO7eKvaw
      1GTeIgJZsZnYNE0zZ2mDKYzANiMbCyCXy5mV27xerznD12o1c/a2xm0Yola1WjVLq2wWMRRF
      QVEUPB5PQ06yQdR2u31HpdTIR9ir4mqM406Sc24XH77/Pk6XC4/LhRxtJ3DwMG632/SI2+12
      dF3H29ZJfO4qLWLj++supVn46/+P1EtfoXffATq7ukj84L8y73Cy/w//M+H+YZb+8bt055Po
      lRor//hdhuX1czQxlo24JJbeeYPgehx/qVjA7vEQtsFyfBnhc1iycccRN+NSY9Y2fjMS2pPJ
      JLFYjFQqZcrqiqKQSqXMP0O3MEQfY2a2zqaGmLPZzm54gQ2xCzYY1Mgv3smKZDDfXvILjDCP
      BxXu/NTJk8iiyIkjRzjy1EnTl2IYBYx7ifb0shZuHrzWrVcQ3/oey0tL9ZW7VEF+5lXmpybJ
      /vNf0llK45VE9nvtG8S/AzotSSzVth4kpYqIQIQaK+V7n4Z6t7FlBdi8tG9mAsODa2UEq2Oq
      mXNos+PKaoq0Xs8aA7S5OoThiDOIuNk4s9ksHo+nKbHeTiW5zXVO7zcmbt4kVMrS1te1hXGt
      z69YLOJbmQWnxMd5lWMuAZfF5BeWRZZjq2gtLYRDIYqLs+QTa4xJe082UnWd6/kqXruM94kX
      qL73b9hEgV6HBI7PnzZ8yxXA+uDdbjfBYBCHw2GKPNs5rKywEt/mz5v3c7vdCIKA3+9vEFeM
      fY2Ed+t1jf2MZOxmMGoQ7ZYJjPo728FYpazfjVzmuwFVVfnRD/6ZjoAXxde8wJQhjrpcLvLe
      etHgQTtcHX2SmWg/i6pIWdW46WsDdKbe+zmirjEycZax1MJtjUsE1lSBq44Qqfffoqfy4Kpy
      3A1s6whrRtjWcoZ7KQdoJfjN+Z5Wq45RCmWnRJjNBGYtj6Jp2rYmUWNFudWMbphkjQrW28HQ
      Kdxut+kENKrdBQKBO1aSr169yguD3aQ9QXrXK2Jb/SJer7dhJay1dMLKOG12ifz1M4z8p/8V
      VVVZW13FtTiL571/xW8TqWo63IFzShAEvhC0Axn4JajOuKU8ujGbGrO/lWAlSSKbzTbMfLsR
      EZqJVsZ262eHw0GxWDQda9bQCsOaYYhThuJsyPZer9f0TjeDx+OhXC43zV8wYIRv7wZGMWAj
      rNsIBzdMxXfiIyiXy8xNTnDQ5yXuaByPKIqEQiFEUSSVSplBiXJuo4qaKNuZmZ5CKRYZOXiI
      8ffexL/upLI/AM/sbmCY1q1MvZsJ607R1AwKmAFvVoYoFosN8TrbDa6ZfG4w0+bPViYwzJyb
      lVprswjrNc2E6UwG2Dl/eDcPcy9xPc3EOuOZ3anCvDA/hxRfwS5JeFvqKYZWs6/hE7GuwpXA
      RhSnp1JA03Sypz/g9J/+X5SLtx9Fe79gs9nMSa1ZyuS9QgNFGKbNzTO/lVCtA7tVJv9O262M
      YLfbzcYXxkPQdd0Mf7bZbASDQQKBAKFQyBRzrOPaTX3Qu1nFzdARDLHNcPjdaZGshYUF5k5/
      SlvAx6LowC5vrCTGs9pcgkbXdaRIG9X1SaLVYcP183/C3tHLiFbkgFa8s5u9DxBF0RQ/jb/7
      wQBb5AWr4mvlxGZJJduJNtb9bqUg67qOx+NBkiQzy0qSpAYxZXNQns/nQ1VVM7nGIMJbweVy
      bcsotxPV6XA4TJOkURXvTnDt6lXe/9Eb7O9oxeYN0HH4mPmbIAhmifhUKrUlqrW1q5uF8SCD
      1bpS2iLqtMxdgnvUpna37/dhx5anYzU1bg47sO7TDJvFmls9HEmSCIfDJrEbEaeiKJq6gHGe
      zXZ8r9eLw+FAVVUzX+GWN7uNZUcUxV1FlTaDESx4J8Sv6zqffPIJb//wB7x6YISnh/rqZQEt
      MKpvGwGEm8fgdLkoue9/66T7Ka7cC2xZAayWGaCBCZoRthGvs7lCRDNb/Wb4fL6mSqs1gcaw
      POVyOfP8BjEYKwHsPuHF6XRuqR6wufne/cbCwgJn3/4ZXz9+iLZAnYilTZOPwbjbjXN5/Br9
      8Xmw3R+/hXVsn+dVoKkSbHC0NWLT+rsBSZLMIlfN4oc26xJWGEkwzWCdUQyF0to0w0i6N8aw
      l/AG6yqw2Y/woJBOp+kOBZiJb1hy2gNeVpYWze/W4L/NSCwv0nr5I/yO++ut3o0P6GHHtlag
      zTdn3W6t9JxMJs2k+GbYbvteqik0syplMpkGeX4vL8LlchEKhXC73XUF8gEzgN1uJ5bL0xPZ
      cHgpqobTtVGItlAomKuqwQRGgODV06dw6M2LCjzCztjiB7B+3o0Cm06nt6wQuq4TsSRXW8up
      GNiLzGw1K263GmUyGVOBvhWsYoW1R9mDQnt7O4l8kc5gvYzHlcUVJLeXcGCjFHixWDQbZYTD
      YTKZDGvLS0iynf7uLiavrHBYuvdVKnZDF58XFGta4wqwOj/boNRYHTzbwUhiMQLGDMvI5kbP
      1pXDiB/a7YM08oA3w/DAqqqKoih7LocuCMKuwqnvJprds8/no6u9DYBkoUjaEyDr9DYwptvt
      NnWVa1eucOmtHzGYXUW7cQnh8ikOe+4PE/+yEP+iL0rlN/6gcQW4cuECxXKFgZFRoDGEYTtT
      ozVpxZDpjVliJ2uRYeUxss12gt1uN0OgrdhcIaJcLuNyuR66TuqGFSufzzdV/EVR5JmXX+Xm
      5HVcfUO8dPAw6XTaFPGsRcF0XefG1SuEfEGm40lcsszeGxb9amNR9tD1m/++XujB+kNR1Rg/
      f5aBkdEt9v5bYbO+cCsiNILHDPPlTrOwLMu4XC5zJbDqJ0ZkqaG0Z7NZ06n2sMBgeKNZSDNn
      2cDYPvTRMXRdNytOGyuaJEmmz0PXdX7tK18F6srz1JVL9N4ny88vAxKig+CXfse0Mm4uvcXM
      0grXzm1077sdTX+3cqKiKKyurhKLxW4pvlj1gGYWJ2uYxcOGvTgPs9msWUnD0Ges/RZKpRLx
      eJxUKoUoiowePU7G9vkvz3g/kFI07F/+JtGubnNbAwOM7tuPqmtcPnuaycsXt8TvAA16wd2S
      nY36nUbnyM3Qdd2sDncra1OtVrsnjavvFNZGgjvVJjKedaFQoFQq4fP5GsREVVUbnID5fB5O
      PM9FTyvZ2u6U4M3GDuN/s/e5OeZJBzQaHWCfB0dYoaZRe/5LtPX0NmxvYIDjx4/R0dmF4nTj
      8jTPe7XOts3ig7bbZztYGaxcLhOPx81cY8AsiWisEDudzzhXJpO5a0Ww7hTj16/z/b/7W2q1
      Gg6HwyTu7XD6449JxONm6IOxVBuhzR/97V8y+d7PzNgZh8NBx+Aw/a99nUV9936AnfIymiFb
      07ier3JB9DEX7edydavYdS+Y4W6cq6rpjA8d5+rM/JbJcUt1aOMGUqlUw4y7HeFtXgmaiSG7
      0Qeg8WZlWSYSiVCr1YjH402Pa6ZsW8fpcrkamu/db5w/f57a3CTFSoXOo4/TPzho5ksHg8Et
      jsByucxHb/0Yb6VE0e5kZX6OV775e2b+RSaTITM7hSqKRHoH0HXd7LMmCALTpz9h38zFhpDn
      zd7aWz0L6/NbqaisYUP2B/GEwgy0RZHW3+W5iSkyayt06lUqTi/5Qp7H/Y4t57gT3E1P83xJ
      4UxkgAG/m4HjT1CTbKBrW0MhjCrQbrebYrG4xZwJG5lIzVaAZgRpJNMbpVK2cGGTl6KqKtVq
      ddvQ4u1CM6zfjVUkELi7vWV3C7vdjqwpHOtpZyqbauiLUC6XTRPsysoK4599jJJKMNIaIRwM
      47Lb0VuDnL1+jb51o0QwGCQYfMy8N2trWV3XcUaiLEzLDLK1flKz7ztBEATmihXaD4wx3N66
      5ffjw4NU+nqYWFnjQFcHyWyOlRuXaLdLd81XYBg2tkO+prLoDILLg14q4ilm6LE3v8celwyp
      WYJZWJ4dJxbuItI/sNUT7HQ6zbZFRvhwM0+sNUq02WcjStN6vBE1aT3P5j+rl9ka7rAZ2+UU
      bD73gyxgWyoUUGoq8+ksosdr1luCegKIUdFi6cY1hGyKoMNOVyiAy1wZdOy16rYiphEgaKCQ
      TlF1ulnRt7Zt2usqqOo6zpa2psRvwCHLHOzpQhJFosEAKX/0tq6XrDYXVW9l0MioEO7s5tBg
      P4cPHoCeIYq17Y/pcUj4bBIdko4UX8aN3jwa1CBcw0S52Rm2eea3crxxvMEMhqxq3FAzp1Yz
      AhYEgVwuZxbS3bz/dn/W5toPqnCtAbvTiRLtpOPF1xnef9DcboxVFEVmZ2a4ePUauVKZg90d
      Dc9CEARqha3JLIIgmD6CQqFAoVAgn88zcOQ43V//FovtgzsSgoFCTeWs6uC05OeKIlLVNDI1
      jcVyDV0HtVSkUL51noWB4YEBzuWqxKo1SururHGLuo30y9/g8sAx5vagwwDkZRftgY0I2L7W
      FuZ2UZY9affQMjiMmk3tXBzXqgPs5AyzvjRD3GmwHFhWBuuyZvzWjLkMIjEUxmZi1ma51rri
      BAKBhuy1B4HDhw83fNf1euqmkTtw5dSniIlVnnjuedbm57FJG8WDs6UyC4kULkli6vxZWgaH
      CAQ2koaM8jDWFdW4//0vvMyVn+QJJZcZlHXEJrPxZKFK0h3gmeP1nANV1Tg9MUV7wI/L6eTy
      4iJOnx27vHsPs9thp+fQMbKFAgVRJDs3zWHHxvNPqLDWPYqmQ3hxgnZJo1BT6Whtg9Y2Vj0+
      Zk6/Q9UXxF4p0S82rt4JRcMlCbhFAUXXkVs7G2hHEkWEUAtCJb3je9daOrB5/SgMSskAACAA
      SURBVKiTV2/dIqlcLpPJZMwTWonX+G88+M0EuZ2crigKuVyuqcNqp2XPqntYb9zv95tpgkYo
      BtTbdBor2d3MBrtTfPzuO3gcdjqKKUJuF7PxFDcLFUY9dnoidSdZulCkUKnSGQqg6ToXl1bx
      HDhuFiQOBAK3NEXXajWWpiawX/iYIWFD78pUa6x1DtPi89AauLPWo9uhzsQlxq9ew17Ko0Za
      8T75ItHWukgVj61RyGRwSCLtAxv9vAwxWalWmf3oHfzzN5FFgVIwiufkK1SrVeY/fpden5vh
      /r4G5hYEgaVkitXpSbq0CkG5ufFlpmMYwRugeO7j3fUIKxQKXLlymWuffcLjXW1NT7oX2tJ1
      qNpkKi4f3rYOsytJMBjcscDV5hXIiOUxKtRFIhFzBahWqySTG+HFwWDwgYtEl09/hlwuombT
      jIa3Et6luUV6ImGCnrpye2Z+GT0QRkfA396JPxSiWq2iqqrJ9MVi8ZbN+mb+4bscFDcYYLWs
      II0dpSN0740DN1fWyBRLBI89SXg9v3k3GXxWa6JRJxZgfmaa/ZUMdttGrjpstRidm5xhLLtM
      WdNJKip9rg3xavbIC1TiKwQOn9hdgwyXy4U0P0Uhm2X0xPbduputAtvdnPF/Zu4GN+MhPF4f
      dlnG7XY3hFdbb2zzQ4vHYthkmUAgsCUGSNd1swm3kT75oOENhVm6NMuhkLdBrzGeWyJfoFCp
      IDvdOL1e9I4++oeHTWVZEOrpoOl02qxwYTB8Pp9vGld1+ic/4qBWbfD4tDllLoxfxX7wCGGv
      Gx2aikl3gmKlissuU1FqPD7QS2JxkoWVJboPHd2VWGoYUqDRCOJxubhWKqCpMr2VLGFXc8Yf
      7mxnolLCH2mhvLYM63nRs4F2xk4+x2c/e5PeYGh3DCCKIgld4lsnH9txv9sJmVjLFXHqEvZ0
      jDW1SiGdRvf56Rkc3va8hhnRNnuDis0BR0+gKAqVSsVs0Od0Ok3H08MSItE/NEx7VzfXf/5j
      DoR8DZ10Ls0vMdLaQjyXZzKZZlQUqOoic9eukMzleezpk6YTzfBtGLqQ0WGzpaWFSqVCrVbD
      7XbX9bH4EhGHDjQS+FEnvHv9OtEjj6PLDnzZOEOBWwcm7hYX5xYIuFz0tdRzHCJeD8Vkelfl
      7HdCuK2dYrmCLZNgrVwm7GoUbY3n4nM5OXrwAEpN5ebkNfDYySkqwedfA0DJprn0yUe77xPc
      3taKR9p79d/t3OvG70/1da5v9fHR/BwZyY6yuEj/yBg+n6/BCmQ919yNcZ4KBxhPZOrWklqN
      VCqFLMsNoo41eeRhgNPpRIl0UK6kcdk3luVDPZ389OI1DvV2cqS/h2y5wsfLCZTVRQJ2O1ff
      +RnOrj5a19sXWSeFWq1Ga2urqWDn83ncbjcXP3iXw5KCIGy995u6g7HXv07/yAg3r1zmwuUL
      OHraCTgdLBTKBOw2Ov17ZwilpnJzZY2Q281YZ6O4rOo6tfX+EJudmLeKGqjValTKZdZmpxnU
      SoQ8LvBs1SGt54jn8swsLHLIXX/OqdFj7OvppVgo4BscY2z//t0zgKypiHuo/24d0HZMYB1w
      oVJFDUboysTp6+8kkUo1VIsol0qkrpzHoVQQgMdbwqxl85QR695JoR5a7XQ6Hxpi3w5um4St
      1qigiYJAW8CPKkhUajUKlSpPvvo6b77xLxy2y3R5nEznc9jtfcRiMdra2urKcjpNR0eH6ewz
      Vj2AQCRC0eUjoBQa3oGi6diffomB0VF++m8/Yp+oMBTy4XXYuazZ2f/0k3W97/olDgbc7AWn
      pmZ4YqAPqUkBrt5wkPjUFeIVhXwwysCBQ1vM6M2wvLSEOHUNt8vFCZ8b2E1bLJ2ZC2foc0iI
      ssRsSx9jr30NoF5AYG6KBUnYQ6f4UgHst668cLvQAW8gwLBdJVeuEr9xjZaWFgqFAnPj16gU
      CrzYvsHxC5k8lb4xToyOmj3GHkQF51thavw6laV5RElEcNXLLaYW5xltrd9LrlJlTRORygXs
      vQP0Pvk04x9/yLBP5Oa5z/j67/wub7/xA0IeyCTqVq34/Cz6/BSiIBCxwc15N0++/CrQWFBg
      8NBRioMjnPq7v8SVWqNV0mlzysiiQGb8Mjz2OCeeepr8qfc50lNfiV16fXZ2uVzYj5zg/KXz
      2NCRNJV9AfeWyWxmLUF7yI+m6TjtMlG/D0VVkW1b871FQaDV76MVqNaq3Ji8Se/ImDnuZtB1
      nVoxT4/PQ8C1sxHDykQ6Oqs1gf1ukUWbm87Xvm5KA3Ozs3S5ZKK5+O4YQNd1pDuQoa3NNayK
      qtWMZyitxcwq7QEfiUrd3b984zpHneDyNS53OUlm3/CwaQd/2JJgDCxN3mREUgl73LBeSDbs
      sXNpZp6qplF1uHnht79lln//7Bc/Q/QFWM7EGPLYWZ6b4cRLL3P14gWCaoobly8h5DLs720H
      YD6RIjg8Yl6v7jzMEIm04HQ6cbvdPPf7/z033vsFjkqe67EYytoSLVI94DAcibDSPcT5iWt0
      +zzoTrtZ/jIYDNJ77AS6rpPL5Zi9dp7+aBhFVflkYoaAy0nI42YhkUYSBUqKwmwsyXBryy2f
      i90mEUmtsvTBIrrdgQCUXV7CPX14vV7mp6YQ82mo1eh3iPh2SfyarjOTSHO9ojP81d8mJkD3
      0LAZNpJOp7n43tuMDQ8xXizuvk2q7ry9ujnWwcGGnX8zwfpdTvLzE0SDfhRVpZzKoFw7v77k
      bWB8eY25dA6ptYOuXK4h9/hhxOFnX2BqcpL8/E06172WLpvEwa52ZgoVvKN1D7FRF3MtlebV
      Z55D0zRmP/2AjsQSy8k4L77yKhOffkhs4gaqrnNmuspqNo9HlillTlHOpHGIIt7kCl6bxHSp
      gtTZh+Dxoqsq+XSKfKlITbSx5AgAEvnPPuboS6/QPziEPLaPiatXUPN1JdvoFedyucwCxDcl
      B+XVODGbi5LNQZfbRU8khK7rTK3F0VSNZ0cHd+1v6Qj4aGzIqhGbuMRascyBlhCyRwZ2XtWT
      hSIhd502l7N5FmxuvH0jfGn/gaZVR3w+H8uFEk8MjjLc2ro7PwDA+NtvMejcu2wtCMIWk5/x
      fzemUgNlRaFQqXJDtfHkSy8/cJv+blEsFrl08QJHKmlEyz3PlxW6nn+VfC6Lqmq0tbej6zqX
      //X7+A49Rv/AALVajRsXzlFdWSQtO4m4nJQXZ3G4PUyWFHyRKLmb12hvjdLlsBH1uhvCUKAx
      XGUxlSFTrlBWahzt62Ipm8d++HG6urrJ5XJmeIUhkxsdeIzSNwA3b9xg+uxnuAMh9kX8oChk
      iiWG21oIe++diNwMc/kyuXAbLfFFUqqO1D9KMBTC7/ebZfY3Q1VVJv/tnxG6+hh57InddYoH
      EMLRW++0DYyHaW28Z/3N+nk7a8Cp6Xk+mV3myFMnPzfED/WgN72QR14vNGzEVWm+ELlcjnw2
      R1t7u7l/xu4m0lIXIWw2G2PHHmNVhedf+TU69x8Cm51qqYQ/3MLw0BAIAo+3hekMBUziNxxN
      m8NSukIB5hJJTk/N8uH4JHMVja717ChrrSRrHJfX6zXrMJVKJUozN3l2qI8hj51qschyOsMT
      g733lfgVVeVSrkLLk8+Rz2bJdQ5w4Itfp6293awTtd3kWiqVcMg2UxLZtRI8cuQY//KXf84r
      g10496hsbld25Fa5Btb9pmJJ+vYfJBhq3iziYYXNZltvFr1xj6u5PO4DY7S0tBCNNkZQPvf6
      l1BVlUqlwumfvYlarTCw72C9fWk4zEShgrOUY201SSAUIq9tzPZW69dmEVPTdcpVhfaAny8e
      rYtdZ9P1HgculwtN05gfv4aUjlNxevC2d9LSWm/C53Q6zTpMrW3t5NMJ4otznDzxOBfnF1lI
      phtqGt1rSKKIWFNIp1K0d3QQ7ewyy9JPvP8L3D4/h19+DWE9ENPwt8RjMa58+B5dskDb8Lry
      vVsRCGDqxjjta3PIeyy42iyceq/4aGKG7pMvMjQ8fOudHyJomsbq6grFc59Sk+3osp3Q8H5C
      0Sg3PjlFZX6JytwSgsNOLZOjtq8T0W7j6CtfRAemL13g+PMvms+wkM/z43/6B449+wLz8/No
      mkpxcY6DIR8Fp4cuQSWtC6SLZaqahsvnR5PtLM7PM+ZzMpdI8ezYELZ1ZlkoVqj6wyRWljkS
      cONYD36L5QvM2Tz07TtAuVQi8aO/JyqLJCoKHU6ZxWKVeVXCoasEIxEeHxvZc6zV5riyzZ93
      gqpprOaLpLDReuAIHT09LC0ukjvzIV6HA+/TLxEIBKhUKuRyOSbHx1GX5zjUEmAimeX4N76J
      IOzBDAowMDLK+MoCQ3dgZt8u9PlWTJEulpCWlz93DCCKIh0dnSxpTxJpaUHTNGZOn+P6//5/
      EliIIQEey0uvDEboiAYRJQm/30/ohZcazufxevn1b/97Tn32KSGfF28wROsTTyKKAl6vjw/f
      eRunx0t0rM0sPykIAlImxUBLgK5QgA/HJ3nxQL30TbfbAbUCgy2NsUktHjfLcwtMVyo4Jy9x
      0FtXKFsd9VyD1VKVLw50IAgCyXKVD85eYmSoj7bA7jPwmoWz79ZLLIkiObefQ8+8YK58breb
      iiSRKpbw6PWqI1c/+ZBKNoNPhL5oiPlUhri2MYHviQEEQcA/OMap058w6nfd0i5rHGPc7HZO
      j1sR/821BANPnOTw8Z1DMR5WaJqGw+k0a/ov/OAnRBdiQOOMl/baGeuMsqYJBHcgIlmWeeLJ
      p0gmEg36A9SrzHX29nHlzCmiPX04HA5mJ26a3R1FQaDF521QlK21Xa0FD7RMkuOlOLgbE2zi
      pSpFob7tjfcuI8aKiEs5zpxI8uVvvLjr59LMYbkTLWxOCtLWU3iN73Pz88xXBXqGDpBMJjnz
      9s/QigVSxTKPD/dzweXH3TvCiwcPmsftuZxYZ3c3kejXuHrpIqvzE9hEkcEd7L6b3d17WSZ1
      XWcyV6L7pdfxP6C0xjtFrVYjl8uZRCZJEvb2KMK12S37apqOgECrqLMwNcnoocNbQp4NsUGW
      5S3EDzC0bz/lcpmrly/zTHsnp9/6Mc92RnCsK6k2SUKpqZSqCi67vCWpqeH96M0rfM+VFI72
      diMIAhG3i8rMMhICiak1StUq7juI9dktBEFg0CEwOz3FwNAwgiAwMDBAV2cna7EYb//LP9Ma
      CuDt6+eFY48hOZy0trU1ZOXBLbpEbgeHw8Hxx5+g4vQiCQI/uzzOpblFZmJJZuNJLswuML22
      kci+2dKzW9zIlRl86bXPLfEbDiRrGchzf/d9itPzTfcPFxXOfP9tiqKE0+sjk8k0lIXXNI1M
      JkM6nSaXy5HL5RqC/IzP41cu49MUYqc+wKdWmFiNs5ze6OZ4rK+Lm8ur5hiNWX+z9aQsSFQt
      mV2lmsrVTImw32+GOvQOt5F31MlIbPVb0jlv73ntZh9jv2pN5czbPzfv2+fzEWlpYXh4mFBb
      O30jo3zh69+go7eP1rZ6XJJRY8nAHRWUbN13iNi5Tzn0+lfx3ryIpqpouk6Xv42apnJ9cYV9
      Xe23nPmn1hJUbHbKlQoRh42o14PLLqP4gncUOfigoet6Q17z9U8+w//WxzhrGjrNKzbYl1PE
      JCcj69YuoxG50+lsePlGs3EjgUTXN+oN1dIJesJB3E4HvS1hnLLMWjbHxGqc4bb6aq3UatxY
      idEdDuK2N6+P2tvVTXZhghapTtQX8wqPdXcgW1alietLBKt1G5drfI2f/uB9osf6OdjTiX0P
      RYc3p4Ju3tZsf5so4pBtxONxWls3cpdtNhtDBw7S3tmx5bjN/qfbZoBCoUBXfz+p+RlmLl9E
      Lhc40bphCrNJIiGXk1OTM3jsMgGPh65wPZwhWypzrqTT3d1NLhknocCzX3gZn9/P6soKqXKZ
      9ORVkqnm5VAeRhjV3ABisRjRaJRyuUypVGL6X35CdXGFyOUpbHrdgmFU34CNBBFJkgjVRERP
      o0LaLJfaqkttznWQIm3klxdocThMk3Wr34ff6eTi/BKlapXrKzFe/q1vMru0wH6UppNUMl8g
      X1JZrJSxyTIH26PY14MTAS7MrKJ9Mo+0Ph5nVSMxvcyLJzq5MT6OOxJloC265bzFSpUr16ap
      6TpPHxtr+jybhcBv3uaUbbQ65C0m31qtxtDw8K7qzt42AxgJ8462TkLxcyg9g0wnVxnwbMzY
      bQGf2fFkKpagrNS4uhIjfOxJXh0dbXpeQ669MD3BiMdOPB6npeXWsSUPGnNzc+SyWSKRCC63
      m1QqRbVaZe6DTwn95KOGfQ2Rw8hks8rhNh1K2dwtr2dkvdntdrNsonE+u2xjqLODqLvRSOG0
      yxzpqzu++lujpFMJho6fYPzdn7KvSYbaob5uPq1UOOZvXIXXskVmFxKsvTuBzxIiJggC/rUy
      v/j5NYYe64HEKueTCXTZQakGru5uqisrLL95Bu90ipRfJl6r8sqRsQbRqdnMv922WqRtC32s
      LC/j8XqA7RnAcBLecU3t/oEBrq+toCzM4HrsKebHL9Lj3iq2DEYjfDo9j+oLMrIN8Vvh7ezG
      szhJYmX5c8EAwxbzrBFMJssy4UP7WNl/hci1GTMlxbRAWEQE0yIjsOsew5lMhmKxaHrYNU2j
      u7ubkdEx5kURJbGIbGtus24L+LCn10jFo+x//Wtc+fgDtHyW1bLCsxGPuXL4nE4Wcnm6fRue
      3kvji8jvz9GsI5ldA64lmbyRpOyxETzURtEhMrVWon8mTXUpRmA6Rd4pse+bz9HX08bUWpyD
      3Z1NzrYzPl5c49nf/GbDtunpaWySRDgc2Vb0NqoQut1upO985zvfMX5QVXXPzSIkSaKtr5/E
      6jLFcgVHJEp5bQWvY+tL7Aj4WFU0ekf33fK84ZYWrs8tEOzo+lwpwYZsbpg8PT4fnS+eZEpX
      0CfmsGs7K3oaoB0bI9zddctrORwOvF4vsiwTDAZpaWkxV5b2rm7Gb4zT4tj+fbrsMvPpLNGe
      Xjr6Bwj19BNoiRKvqiQqColimXgyiTMQImNzsJDJ0+awEQx6mJhexVHavvSkTQdnRYP5HPpc
      lq4XRykurUG2iDNbRTjSzbMvHmc5k6U9GDAdcLtFqlii2t6LUi7hCwYRBAFFUQiFQma0gKIo
      2+aGGGEpd8wABmo2maVrV2gfHaPs9GBLJxD0japyBjeWgtGG6rw7oaN/4HNF/EYdU6g/fCOh
      RxAEggO9iE8dYXVyGnd6+8bVIpC7eI2EBC0j9cjK7RoO1mo1M/XT2mlT1/V61TmXh8LKEp4d
      iMtZLTMVT+ILR8hm65aizr5+2gaGiA6O0H/sBNF9B2kZPYAWaePdDz9m6t3rUFBwVhsbmVvj
      iAwIgoAugH9/By8+c4iLiQS1fIXR147TEvIzHUsgiSIB90a0sappO+YoL6WzLPpbCYZCJC+f
      o210P/Pz8/h8voackJ2qZhjWr7vGAH5/gHB3D4Km09U/wFwmR1ApNUQlAqTdAaLtW7VzK4wk
      9lKpZHLxwxrvb0WpVDIbYbjd7oYxV6tVQtEWWp57kgVNQZ+YRW6yGOhAfqiL9tdfQrDZKBQK
      pry/uZuN0TdMUZSGP0MsikRbWcnmCavbF7dy2GzYCjmmp6eJx2NEu3qoVqtNmw/6/X7ax/Zz
      5mfvE10tUpEFZI2GSa5ZKqyAQNotEewIcTmbIdga5OQT9XikjqCfq4srdIeDnF9YIaYJLNnc
      rCVTtHs2dJiaqvFvl8cRW9rwjB1i38FDxJaWEGw2OgYGCQaDW8a7HfEbgX6wx1igvSCVTJL6
      8Of0bCq9MSc6GXrmhYZtM+PXqCwvotgdHHrm+YaZxGAEI9PpfnUQ3ytUVWV1ddUcu5GVZaBY
      LDZsWxy/Ser//gsCmQ3rTt5lR/idLzL66ovmC6pUKkiShM1mMy1BLpcLQRC4+OM36AtulcSN
      p5MJRPG2ttEdnzeL2u6EmUQKz2PP4HA4zFpKzXDq799g9q9+SOVAD60fTwC3sOH/7ovYDg7Q
      09vLwtQkvZUsvZbguWypzLvXJwh6PdgHRuntH6BarVJJJUgvL+J0unB1dNE/PLLluSaTyaYN
      R3aLezatOpxONLYOypNPk4jFzO+qqlIev8yApFJQNoq6GoQuyzI+nw9BqJcDTMTjvP+zt8x+
      AQ8LJEkiGAzicrm2vCTYOht1jY3Q+r/9J1YPDqAC8aif1u/8z+x77QsNK4fD4TCLCbvdbrNT
      zvT1a/SHA/SEg1v+utf/HGqVodExpkQXyg69A3RdZzaRIusJ4XA4cLlcO06ET3zz63z9+3/M
      8LGNynfNCFAXoHp8iKd//3d4+ZVXGBkZ4flXXuWz+IZTbiWd5frSKh6ng2dGBhgop1mam6W3
      r4/9jz+J7PXhiEQ5cOTots/1Tsrg37POam63m8BTLzB5/jNaBM2MG4q4nSye/5R4tBOqFfJr
      K/S7HFxPZmk/+kTTcxkhuZIk8e4vfs7K1AQjh47g8XjqJUXOnuHIicfNPloPCjuJj82YtbWn
      G/t/+Dara2scGB7C4XA0tVxsLgbm8XgQKyW6gztXdfPVqiRjMfY99Qzjb/0rw4ENS05ZUbix
      vIZNFFnMlzj22pcJrT/j3UgBdrsdqcnqY45ZANc3X+G1/+H3Gx1PNhvPvvprTF04xWA4wFI6
      w5ODfdxcjbGSzrKSziK01LvjZNJpXNUSbT1Hml6jUChw4edvcuilV2/bUnhPWwtGW1uJvvZV
      VpcWmbx6kbBaIeRx0+WyQ77u5LqYy7BQssHIIfr6+5uexyr2fHG9PxZszDqHjj+2K6fHvUY+
      n2dpcYGOzq0WnM2OHGPswWgLsttldtbcTPyKouzaLLoZGaWGXioRFgSE3iHe+/RDgu66R9km
      iRzprY+zt1xhMZlkYHDQFK92g/DoADGhbvGx3mNNFAj/59/h6d/+WtPjenv7OH/5PPOpDKoO
      qUKRgMuJTZI42tPJ5cVlrn72CQefOknoS7+OoihmzrQVi4uLPFXLsLh6+6by+9Jbs62zi7bO
      LmKxGFPTEwg1BcHjw766QKWmEg36mVheJDs4CGDW9tmsQG/+bOBB1f+3QtM0Fj58mx6XzOTi
      HK0HjjTUMbUSsmHZMUQbq1Ns8zmr1arpdDQYKJNOQyEHzu1XgJqqUom041hPdhkaGSU/fpkj
      7Y2EUqhUmVXg4L59ezaA9PT1crE7jG1+owRluT1I3//0bY489/SOxy5pEoH9h3BO3WA5FedA
      Z90BKggCTptMSy7O9OQEQyP1qh9Gc0Er0rNTCJpEV//gnsZtxV2zAu0GHo+Hlq4eIj19RNo7
      0IMt5BMxqlUFV2/d5JdOpymVSmbty88L1lZX0RamcNps9LhkppJZWjq7zArOhlhRLpepVCpm
      Jpbdbq/rNok4Ho+3oYpdKpXC7/ebjGSYGpevXeZocOd6PdlyhZRjo1CWy+UitbJMq71uKVnM
      5IjZXOgDY4wce+y2ailJkkTRY6f43rmNsI7jIzz3333rlqvIyOgooXCY2aVl/JUiIY+bYqXK
      +PIaa7kcxYpC0eUhGm01u4RuRlnV+PSTj4kVSsgOx211B32gLdJDkQihr/yGGaIai8Xw+/2m
      Ca7ZsgdQWu8Z7Pbc3yTsndDW3s4Pphbx6Cpd4SCaZKM2us+01UPdQ+x2uxu+S5JE+sJpBoJe
      Zucm0Z1upGoFNBUHOhMtXQwMbsxwmqahF7Lga77kV5QaDtnGbLZA14Fuk7BXVlbQvAGmixlo
      76Hz8FPmyqIoCvOzs0Tb2vasRw2fPMGM66/wleuKqGbp29wMuq7zyUcfc/LZZwCIdnZx8eI5
      LpdquMpFXhkbqDu1aiqXbtFjINLaiuILsrS0RCqVJhQK7dlv9EAZwIBB8B0dHVy7chkEgWg0
      uoX4U/E4K+cvcOn99wkdP4rfbmP06WdxrltGFEUxKwI8CHQNjaCmE7Q+9gRen49qtWo6iSqV
      Ci6XC13XTX+BseJ1ep14nQ4OOg3lsy4qFSpVEqV6fwSrfb3mC287hn+4MsHXRnqRB/c1rKCa
      pmFzOhl84kkymQzLszOopQK55SUGTj5Pd2/vbeka/kCAlq8+T/kf367nBzx2YMf987k8bR0b
      eQyKorBSLPMHf/jbJBIJrn78DlGvh0uKyPEnj+2YT37l8mVOvvIaZ95/l3g8xpXTn3HylV/b
      0/gfCgYwIIoilVQSVzrGTXRGDh1pSJy/+kf/Ly1TM3hffJIOm85YyM3CJ+9QQ6AqO1GzKcZt
      To6+8IUHkjz/la99DU3TiMViFAoFU/xJp9NIkmQqc8FgcKOTjSggbSplYmCqqNAyPEStVjOJ
      uVAo0DUyys1LZ4iLMr5SDp9dJiU5kASBF157nc8uXuTYgWjDOb1eL5mJ60z8eIqg006fp142
      ZALVFMVuF31f+wKXv/8ONYeNqn2rN9gK2S7T3b0RCeB2u2nt6ERRFLq6uuDki1TLFZ4Kh80e
      CFYYUsHlS5do72ino6OTd0tlEATm4wlO7nHs91UH2A06+vopyq56RJ8/YFZEfv9P/4zhK+Po
      CFRDPob76vHmfpeToMtBxC4R9Xnp8Tj56Nx5fOEWPPfZLGr1MGqaxvzETWz2epiCz+czLT2y
      LJtJMvmpm/T7t65YiUIRpWsA2W5HlmWKxeJGAJckMbMWp//AIYKDI2iRNsI9ffg66ladcGur
      GSFqja13hCIkCkXKxSLVSgW/y0nKE6Zj4PaVSIBAMMh8bJXoN17Gm1smnc7Q2jfQdF+bzcba
      6popasVjMfzxZbRA2Kzp4w8Etq3rI4oik5OTeDxu+gcGkWUZvVjAoWu0pVdoO/r4nvSZh1LL
      7Bsc5OSLL+Hz+XC5XBQyGXrPXkQAHIBtZpGJ81dJZHJUlMZYeE3XcZaLxE99wNrKygMZv1FI
      qqea4+ZH7zWIZNYSJoIgoGsaZYvcrGk615NZ5qo6wXAYQRAoFAo4nU68vPpRogAAGIFJREFU
      3o3ezfuOHjNDRjZXw7b6DawJ57LdTs++g3gPHKMkiMxnC/QeOXbH9ysIAi//L/+Rx19/uV7x
      emZ85/3FDefV0PAwlY5eLnz8IZlU0nw2O2FxbpbWtnqi1erKCvF8gZ51R2ohv32cVTM8dCuA
      AUEQTCLJ5HLk3n0f17o301+u4llaY+nyDS5OzzNyeCOpoqzUiOVyHO5qZ3z8Oo6WNjKZzJZ+
      Wvd67IFAgGS1RrteZTGeJNxR72dVKpVwOBz1mc7vJ9DVQ9rupry6iMdu53IqT+vxp/C1dZje
      b4/HgyAIpJJJU48o5POk43FisRihcNi8rlEca3l+jkCoUVdQVbXec3nmBgN+N5mWLtp2GZi4
      m3sGEEMteIYP4NnBL+P1ellaXGR18iaaKNLdP8Dc5Quoy/PYIq07GjeunjvDUDnDp5euotps
      JFMpnn3hBQhE0MOt9A/trWrIw0HtO8BQIvNAaJM3NapBcV1HmFqLky2VEQCXLLOSyVH11VsK
      GR1n5qemePzkyftWPr1//0FSbR20p1NmqHI02iibu91uQqEQU5UKZ2Mx2g/WZ2SrD0RRFNZW
      V+lOL7MycxMdaLVBl9uFIAlMnPmYMiK0tIGmU1uep9vjYPliBqmti2o6SaFYJKxW6HI78Ac8
      TFV0Rg5u3+3ndtHSxAnYDO0dHdw49wmF62epvfhlegeHGJNqTM1O/f/tnelzG+eVr58GurHv
      JAHupLiIoiVLsp3I8RI78U1Sd2aqMvNh/sGZDzN175dbk1uTqThOxk68RN4tWfvCfQEJkMTe
      e88HsFsECVKkRIpoqp8qV0kUDTaB97zLOef9/ejevt64uLjYcl747uM/sXznRzb8AuLYNH19
      /U4BNDc0TLyrm4WFBYaGhg79vB0fAH6/n63vb9C3z+qkKxp1RWUgnWK9vMibE6NNd8WARKK6
      yezDB6BrrAk++uqbLC4s7FtxPgnSmYwzQ9u029uOTb/C2HQz4Ofm5pwtgt/vb8orynUykTDd
      sb271umuZurvu/s3ebU/x6yhkAkl6JNEKuvzzXYHucJEbw+mZfFYNjj39vunWmcRRRFx6jKF
      G18x9JffU+oZ5VZlE19MpVGvIysKuVyOzc1NtopFlMd3uRANYgX9DIZEqqOje6r/qqqSy2aZ
      nZ1l9JCf8akHwE5f33Y8+vEma198RtK0Wpz4LOC/JgZ5+9IU380uEA0Fmd52JOnPpLi9tIrk
      8zHS2KInHkUQLAiluP791y80AJ4F+36wXfwKBoP4axV8yf0Vulc2txhKJRF9PkzLdFpC46Eg
      sqrh9/toaBrrySyTP7vaEUXGiclJvioWyM/d42Jxlj+uVVmqPSZ5/hWGh4cplUp883/+FdWC
      3pDIPeBcRCIs+vnmq78RjcZ48N3XxDPdVCplzl95jXu3bmGZhnsC4NaPPyIFAkxOTu4Jgo1C
      gdDqPO/99lc8XM6zcvcxmdklcqqODrzR38tUf44pWq14fILApcG9dw4UTWdteYnrH/2BvlwO
      IZGid7ta2ynouu5UPe0CoSLLpISDi0Jza0UCAiyUyjR0k/M7r1v6BAoNhczVC4wPj57k4x8J
      n8/H1Td+wpe1KvWNBf6uN84XtRjWDvO/QCjIW+FWQawbmzXG33+PP/3u/zF+8TJ3793l57/+
      Ddlslps3fiAWi/Ppp3+ly9ToikXQuvupyw0mJs/vWX1P/RCcy+VIJBJtB+Hi3CzK6hKZaISq
      qjI03Id/tI+ZxTzVcBAhGadvH9vWdoh+H1N9WSSlQU7QaSwt8PW9B+iGibB94D7tJIAgNA0A
      q9Uqqqo2twrFPIPS/q0FW7U6t5ZWGch2c2VslGQ0wqO1QvNKZjBAWVERJy4yNPH0u9gvGlEU
      qckyZctHTqkwKAl8/ONd6g2ZRDoDqW7C+XkCon/7YpSf+qVrDJ0bI3n/OzYX5xi69jbVapXH
      jx8zMTlJMpXCNEwUXefuZ5+wZcDa8hLVr/7K5soiW6pOpqepVnHqAQD7p710XWfx3h2K5QqD
      qTipSJhkLMrw5SmWJBEpHqU3c/T+j8j2feVoMEBYU8jpDSpzj9iaecBmQyGde1KpbNekdpII
      gkAoFGJjY8PJ/igri/uaPkPTbWV+ZobhgX6iwQAhSSKbjLNaqqDpOo3eYSZevfLCfoej0pPN
      IkRirK2vkzZkRoMCha5+RFHi3Pg4K+EUxUCMFdPH0uYW6QuXwTKZuXObSDpD3bC49u7PEf0+
      Htz6kUcPHmAqDSYuXWZ1YR5xc53LksFIWCSjNVh7cBcGx5pdsaf9yx/E5sxDYpKfbDxGbLtN
      QDMMflzKM9LfSyb2/C0PtmxLdtsRUSuvce+TjwjmBhi9MH0qhnt+vx+1WuPenz8kFY/x+tBe
      CcSd+Hw+kn399KWah2G7ej6e6+bmyjqZVGe76EBzJxB46xc8/vY62uN7jI6ec9TcxicmsawJ
      57xo7xY+0QUuTV/lsw//yKtvvkXfwCB922ldwzCo1+tc+c0/oOk6peI6pcUZRtWS8++VSqUz
      VoD9MP0SocomPdEnh7/7q+tMDfSRjIQPdc3vqPh9PtJ+gfWlBbomp0/t+qXg95P/l38n8miO
      B0urnLswzspmic1anXg4tOe5qrJCdxtb041anZ6pV9p2U3Ya4XCYnrFJ5g0fC3/6T+TleTY1
      g/z9O6zm16g1GhiGQWy7ipwdOUc8meL9X/6yZfuqqqrTQh1PJPji889555cfkBw7zw9fXifk
      FwhNNHuWOme0tyHb38+yplJ7dJPodq+KZppHktx7VvxYpzoh9GSzZH/yBtm/fUV1tciXf/4C
      cylPtNZA+e0HTO7w4FU0naqmcz9f4HyutUs0Ew45TvNu4afXrrE60E9pYRZrYx3f+gqNSoUf
      KgqXfvY2hfwqtUaDVCpFo15nxmq2macSCcSARHdPFkWWWZif58233uK3//iPQNPf4mHDYFCC
      JM1bbR0dANCU6Lh7/xbj238fzqS4/nCGcCDg3GiaKW6SDAWbTowHYKuBwcFG3gBWd9+pr4bS
      dkU0hkDsflNN2rSgtOsO7ONKnZH3f02pVOK7+Rm6LI3hbdf3dDTCcvXpSnOdRu/AIL27qtRX
      ZbkpDryWJ5VK893nn3Lxp28yMjjIt3/+kOzU/6K7u9v5TPsHWotyUxcvMXXxEvl8nng83kwv
      d/IWyKaim0Sqm2BZBEWR3mScrVqd+a0K64EoienLFBZm6XlKANhCtbaSGrS3V32kwtibb5+6
      4XYlIOH/9IsWaQFBEJivVlmWZcRQiFgwQEHWiPQNEgqFCCRTrNUVxFoFWdXIV2s0fBK9R6iO
      diq2W2V3Lkd3Tw9jF6aRJIlqtcrAxHmy2awz+NfW1sivrKCoCrFY3DEAtH3PludmkUKhzl8B
      AM5NXeDe0iyjouVkZc5nu1gs15DGzzcPRblB7hbyjCej+8oBiqLYcr+43ex/e22DiV/9fUfU
      BtTFRdpdT+9bLZJPd1MdPs/1tTxaXaZy9w7nLkxjmibZwSGqeh+mYZBKp/dtdd4p6OtGIpHI
      vnc/1leWaSzOouoqpUiU1Uqdn/3Db50JXl6cZbm85Y4AAPAPjSHkZ5B2zNiaYRCRmurA2ZFz
      mEMj3J6bJbBVYDq190Boz/b7pTUN0yQ6fcW5KXWabBSLmP/2f9sIy8DyP/8To9MXiEQipDIZ
      6vURquWyc4fYljWxB3c7zR5d19nY2KCrq6sjgv04WF5aQi5tMnz+AsG1Jaa6ntyZfrhWRNf1
      J4oXch1D0zqzHbodE5PneWwFkDXdqRLqoahzwdxuMOsfPUc98OzpUd8RDQBPitW7d0ntoyMa
      jUadILUFwyrbhbN0Oo2u620VKGxszwHTNPdIq7uVteVlGj9cZ2BrlW9//x8kfTtNWWBk9Fzr
      xGdZnItI7gkAgAs//yWbIxd4WFUwLQvLNNpuY5K9/XxSqFFuyEd6fVU3CAQ6w5Bj4/ZdlgXQ
      LQt1+z9o9kCZt+84k4Bpmsz+8C1XqaPc+pbF+3cJBAKO4oR/22zPplKpUCgUHMlJN3ku78fN
      L69z++M/MpJJ4ff5eD2bJh3deQcDJgWFub98xPdfXqewvkYmICL6/ScnjXiSWJbFD3/+kHw+
      z5UPfuN8bfdSv/z911xJH347s1Sp0/verztiUNz82+cMNrZY3Soh0LwoU368QL64SSOdwcok
      iCTTDIQDXO6KOxPBnc0K3VevAU25mN03q4rFopMMCAQCZDL73y92A4osM//RfzKYTiAdImkh
      azrFhszAds3ENWeAnQiCQGrsPN16g1KpRDKZdESZFEV5UjHUVeDwAaCEox0x+AEmrrxG/q8f
      MdH7xPqH/hw3yzL9V94Amvqrofn7LQPc9DU/0lQq1faAuDMN7IbJbj80TWN+dhZjeY6x7sPf
      /w5JIgPSk/OhKwMAmmoEW7qB1mhAMtlyed6uejbabI/285/aasikpl874ac+POFwGLUrB+r+
      Ofx0JkPRHGdl4SF92zKJerCp7NZucO/0EQNcGQCzjx6h5JcQqyUGY2H8wefbxbs2ADRNIx4K
      kV9eoLa6iG6CT1eJDgwT6mu6jZSlELc3q7ySbkZ8O58pwzRRNJ1VMcyrfUd3KTlJRi5dYeGT
      DxmKN2fypc0SZFrbvLu6e5gtV1jfKmJZFj0Xm01vuq7vqWOoquocekVR7Miaz0F8+/lnDMlb
      DEbCkDieTJ273oEdlAvrjEZCZKoFEuEQmUQUgRArxRUW6nX6RkY5d/k11tbWeDT/gIlsV8vg
      N0yTO2sb6H3DdPVmuTDceYWiYDCIJj7J09cUlf7RVrUFWZYZHB5GFMeo1+sHzuo7t0puzP9H
      6yXSsaf3NNn+Brvtee3Ewc6JwbUBgGWhmyayqrUYdffHI/RZKg9ufI01eI7e3j4erecZ3/Fm
      NFSNtVSO1945mojSaSBEY2A+yWZpmuZcfLdneXsmtz/0aDTaNrcvSRKSJGGa5qmJhz0rzcr9
      4RoT7d9xtyxMW5mV43zIF4qq4BMEAm3sfwRBYDQZRZWbA8eqVXi4+sSTYNkQmLjSOfv9gxBC
      rQNVlmVkWW4qvW1rjtoOOrVaDVEU99VVFQSBTCZDT0+P64pftVqN23Pzh/pee5a33xfbBNz+
      805cuwJYtQqPiwVyifbiVzVFxVdZY2ZtBbFeoX/gSU+9+hT9yk4iMzjM6jcL9G67NEaj0ZaK
      9s5ZLRQKPTWL1YnuOochHo8z/cpFQD3W13XlCmCaJlZpA003iIdbP3D7A05HI7ySiiLWK/xk
      bITI9p63oWokR8f3vGan0tXVhTD9Gt9sNahEky3eaRsbG9TrdarVKpqmEYvFXLe1OQo956cp
      VGvH+pquXAE0VcUwjD2Fj91NbtcXVhnrae2PX0biwtT0i3nQY2JgcJBAMIimaRQKBXw+nzPT
      K4riyCAmk8lT72A9Sbq6urirmRyna7QrA6DeaLBc3OTdqSealrsPO5ZlERk6RyWdoTD7gAuJ
      MAVFp+/qm6f12M+M3e9TrVZJJBLO7SdbOc8OCDfm9Y+KkMmCtf8FH8uymN8so0oBgpZJTyjQ
      lGvcB1cGQCAQIB2Lsl4q0xWLOm0QO1NfhmliROKkMxms9DW++vS/mXznFyRPQTX6OPD5fOi6
      Tq1WQ9M0wuGw088zODjY0u9zlrEkCdS9AZCvNailehCiCYZff5dgMIiu6ywvLVG4d4OhRJTl
      rRL9qVb/AFcGwPrqCud7u3mwuk5vOuXYEO1krrBB73izaCQIAn1X3iDbe/Dl8k5GkiQCgQC5
      XO6lnPltlPVVSEYwTYu5mowhBQCBrouvM7DLf1oURYZHRphRFRZn7nGvotCbtFpMuF3ZDHfv
      b5+hLM4y2ZtF3NG+3NITY1o8MEUuvPVuU/7CZVXPduzObb+MbG1skL9/B384wtirVw4lWaNp
      Gkvz83zz9de8EhKY3HFv2nWjQlEUrMIKumni9+0/EHw+gVSjRqVcPhWzjJOgE+QMT5tUJkPq
      Z+8c6f+RJIlsXx/jk5NEkgnqSw+drKDr3tEHN28wmk62tRTd3efT0LSO8hHzOD0ikQhXX3+d
      /uER1pQnl4BctwIgSfg1376aQI/WiliihC+eJHXlp67sefE4OSRJIvvme8zMPsbc2nBfAEh+
      PytbJbLJ9hXgRleOq++894KfysNNJBIJEpevks/n3bcFsraKFMpVumKtW5u7GxUelht09x+P
      44nH2SeXy7kvAG7MLvCne4/39AVqfj+hyVcYfE7DN4+XC1cFgKqqqJrGRE/XngNwvVYnHOr8
      FK5HZ+GqAFAUheX1AiFJJF8qO1+3LMhOTtF7SH8qDw8bVwWALMssLS6SCAWRt+1RVd3goeFn
      YOxo7oAeHuCyALj9/XdcGmj6AtiXwJfKVabfff9AW04Pj/1wVQBkB4eY6MtRV1SC2zeaRtMJ
      vv/9fyDLRxPB8vAAlwXAJx9/zI35xZYimCAIhIIB113x8+gMXBUAlqETDwbpjj/Z7syU64y/
      96szfRGk0zgreqLgsgAQpQAbtRrpbcuksqISGB7z2h1eMGehs9bGVQGQ6+1Ft+Cz+48BKGgm
      o9MX93yfaZoYhtFWFtzDYyeuCoBkKsV6ucJccZMf5haZmZunsL6+5/s0TXMcQTw8DsJVAXDt
      2jUS8QQrWxVurqyDIFAsFvd8XzAY3KOK7OHRDlcFQDgc5hcffEBdVSnJCrKuk7/1g6OF7+Fx
      VFx3JdI0Tf7yySf8/9/9jkw0zBujg4SSaaLDY0xOTZFKHd05fjf7yeh5nD1cFwA2xWKRD//w
      BzaLBX79v/+OycnJ034kDxfi2gCwaTQaBINB776sxzPh+oSubYbh4fEseNOmx0uNFwAeLzVe
      AHi81HgB4PFS4wWAx0uNFwAeLzVeAHi81Jz5AGi6C3p4tMf1hbB2WJbltEO7rbLt8WI5UyuA
      aZqYpkmpVHJsRL2mNo+DOFMrgO2euJ9RtEdnYZrmqfdwnZkVwN72iKLoDX6XUKlU0HUdVVVp
      NBrOVdYXyZlYASzLolxuSiWqqurKrtbTwjRNZ+WEppHEcYoM7GfrZBgGhmE4nxs0V3BBEAiF
      QgQCAUfpo9Fo0Gg0CAQCxA4QQLMbmwVBQNM0dF13DBQDgfbSOa5vh9Y0DcMwqNfrzteCwSBR
      zxnmqViWhSzLNBqtrouZTOZYXr9WqznJiHA43DLD2+e1gwgEAvh8vhbRM1EUCYfD+P1+DMNw
      Atc0TVRVRRRF4vE4W1tbbUURJEnC7/cjSVLzjOjmALBn/t3LZiwW86RSDsBWzKjX6201fmz3
      Sb/fj8/nw+fzHSmZsNPNvtNx9RbIdkff2try8v2HwDRNFEVBUZQD3y/TNFtWVGi+13ZABIPB
      fc9ZhmFQq9Ve+F7+WXF1ANh4qc6DsSyLRqPxXPqplmU5q4Wu685efKdIlr1XdxOuzALZs4w3
      67diWRbVatWpg9g87+DfjWmalMtlyuWys8c3TdOVAsWuXAHsTI/f70fX9Zbl1ufzdfz+3zRN
      LMt6qp6pfbALBAIHGmSbpkmlUml5H0qlEsFgkFAodKKyMfZBtFaruVKJz1WHYMMw8Pv9TnbB
      5/O1XQWSyWTHiuXah09VVQmFQi3V6p2SjoIgoKqqM6gFQUAURSzLIhqN4vf7kWUZ0zSdTFg7
      9nuPPJq4KgAsy2opmuxHOBzumMvyO/PRdu7bG5Cdg2u2QHal9zAzWicsxaZpUqvVXJEKfJlx
      zSFYEAQCgYBrZBC9we8OXsgKoCiKc1i1S93P0q9z2F6R08xBm6aJrutnykTiLHPiAWCnLHd/
      LZlMHjp/ryiKU7pOJpOUSqUDB7m9536R9YHjyLV7vHhOPADazYSmabK5uen83a4wBgIBJ+Vn
      Y1kWtVoNQRCIRCIEg0FEUTwwAF704LcHfiecPTyOxlMDQNd1px/kmX6AKDqNS/thZ0fsdF4k
      EnF+tt0taAfCYQbai0yB2n0vHu7kqQFQr9cxTZNYLNbSbnpYnyifz/fUANiJoihO+2o7l5fD
      vE4oFDrUzzoOPCcad3PgKLZbVu3S904kScKyLGd1sBWad2897GA5bPbGTnc+z8A66VtGtVoN
      XddPvMrqcfK0BIBdtDlMz/buFJ8sy/j9fhKJxJ4geNF745MOALuotftw7+E+WgJAluXnGjyG
      YThbGHsv/zznh2dBEIQTD7jTvsfqcXwcexZIURQEQXDuer5o7EsyJ9UOYRiGt+05Qxx7AHTK
      RYhGo4Gu60Sj0WOdsSuVitfLc4Y402u5pmmUSqVjbUk4Sy7pHmc8AKC5JbLlN54HwzCoVCre
      9ueMceYDwKZarT7z1sU0TarVqtfcdgZ5aQLAlkw86kpgD/5OOdt4HC8vTQDAk3aKw6Lr+jMF
      jYd7+B9iu5ytXEI33gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='deaths-country' width='192'>
      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
      e3GRHPBODwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='deaths-weapon' width='192'>
      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
      CFuTAAhb+z+uvHjF/em0PAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='deaths-weapon-history' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='deaths-year' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='perpetrators-analysis' width='192'>
      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
      9JmZECgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='story' width='192'>
      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
      /wdr/20ZNRfV7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='targets-country' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
